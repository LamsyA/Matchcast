module.exports = {

"[project]/node_modules/frog/_lib/jsx/jsx-dev-runtime/index.js [app-route] (ecmascript) <locals>": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "jsxDEV": ()=>jsxDEV
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$jsx$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/jsx/base.js [app-route] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
;
function jsxDEV(tag, props, key) {
    let node;
    if (!props || !('children' in props)) {
        node = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$jsx$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["jsx"])(tag, props, ...[]);
    } else {
        const children = props.children;
        // biome-ignore lint/performance/noDelete:
        // biome-ignore lint/complexity/useLiteralKeys:
        delete props['children'];
        node = Array.isArray(children) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$jsx$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["jsx"])(tag, props, ...children) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$jsx$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["jsx"])(tag, props, ...[
            children
        ]);
    }
    node.key = key;
    return node;
} //# sourceMappingURL=index.js.map

})()),
"[project]/node_modules/frog/_lib/jsx/jsx-dev-runtime/index.js [app-route] (ecmascript) <export jsxDEV as jsx>": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "jsx": ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["jsxDEV"]
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/frog/_lib/jsx/jsx-dev-runtime/index.js [app-route] (ecmascript) <locals>");
"__TURBOPACK__ecmascript__hoisting__location__";

})()),
"[project]/node_modules/frog/_lib/components/Button.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "Button": ()=>Button,
    "ButtonAddCastAction": ()=>ButtonAddCastAction,
    "ButtonLink": ()=>ButtonLink,
    "ButtonMint": ()=>ButtonMint,
    "ButtonRedirect": ()=>ButtonRedirect,
    "ButtonReset": ()=>ButtonReset,
    "ButtonRoot": ()=>ButtonRoot,
    "ButtonSignature": ()=>ButtonSignature,
    "ButtonTransaction": ()=>ButtonTransaction,
    "buttonPrefix": ()=>buttonPrefix
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__ = __turbopack_import__("[project]/node_modules/frog/_lib/jsx/jsx-dev-runtime/index.js [app-route] (ecmascript) <export jsxDEV as jsx>");
"__TURBOPACK__ecmascript__hoisting__location__";
;
const buttonPrefix = {
    addCastAction: '_a',
    link: '_l',
    mint: '_m',
    redirect: '_r',
    reset: '_c',
    transaction: '_t',
    signature: '_s'
};
ButtonRoot.__type = 'button';
function ButtonRoot({ action, children, // @ts-ignore - private
index = 1, value }) {
    return [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
            property: `fc:frame:button:${index}`,
            content: normalizeChildren(children),
            ...value ? {
                'data-value': value
            } : {}
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
            property: `fc:frame:button:${index}:action`,
            content: "post"
        }),
        action && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
            property: `fc:frame:button:${index}:target`,
            content: action
        })
    ];
}
ButtonAddCastAction.__type = 'button';
function ButtonAddCastAction({ action, children, // @ts-ignore - private
index = 1 }) {
    return [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
            property: `fc:frame:button:${index}`,
            content: normalizeChildren(children),
            "data-value": buttonPrefix.addCastAction
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
            property: `fc:frame:button:${index}:action`,
            content: "link"
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
            property: `fc:frame:button:${index}:target`,
            content: `https://warpcast.com/~/add-cast-action?url=${action}`
        })
    ];
}
ButtonLink.__type = 'button';
function ButtonLink({ children, // @ts-ignore - private
index = 1, href }) {
    return [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
            property: `fc:frame:button:${index}`,
            content: normalizeChildren(children),
            "data-value": buttonPrefix.link
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
            property: `fc:frame:button:${index}:action`,
            content: "link"
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
            property: `fc:frame:button:${index}:target`,
            content: href
        })
    ];
}
ButtonMint.__type = 'button';
function ButtonMint({ children, // @ts-ignore - private
index = 1, target }) {
    return [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
            property: `fc:frame:button:${index}`,
            content: normalizeChildren(children),
            "data-value": buttonPrefix.mint
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
            property: `fc:frame:button:${index}:action`,
            content: "mint"
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
            property: `fc:frame:button:${index}:target`,
            content: target
        })
    ];
}
ButtonRedirect.__type = 'button';
function ButtonRedirect({ children, // @ts-ignore - private
index = 1, location }) {
    return [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
            property: `fc:frame:button:${index}`,
            content: normalizeChildren(children),
            "data-type": "redirect",
            "data-value": `${buttonPrefix.redirect}:${location}`
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
            property: `fc:frame:button:${index}:action`,
            content: "post_redirect"
        })
    ];
}
ButtonReset.__type = 'button';
function ButtonReset({ children, // @ts-ignore - private
index = 1 }) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
        property: `fc:frame:button:${index}`,
        content: normalizeChildren(children),
        "data-value": buttonPrefix.reset,
        "data-type": "reset"
    });
}
ButtonTransaction.__type = 'button';
function ButtonTransaction({ action, children, // @ts-ignore - private
index = 1, target }) {
    return [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
            property: `fc:frame:button:${index}`,
            content: normalizeChildren(children),
            "data-value": buttonPrefix.transaction
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
            property: `fc:frame:button:${index}:action`,
            content: "tx"
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
            property: `fc:frame:button:${index}:target`,
            content: target
        }),
        action && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
            property: `fc:frame:button:${index}:post_url`,
            content: action
        })
    ];
}
ButtonSignature.__type = 'button';
function ButtonSignature({ action, children, // @ts-ignore - private
index = 1, target }) {
    return [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
            property: `fc:frame:button:${index}`,
            content: normalizeChildren(children),
            "data-value": buttonPrefix.signature
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
            property: `fc:frame:button:${index}:action`,
            content: "tx"
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
            property: `fc:frame:button:${index}:target`,
            content: target
        }),
        action && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
            property: `fc:frame:button:${index}:post_url`,
            content: action
        })
    ];
}
const Button = Object.assign(ButtonRoot, {
    AddCastAction: ButtonAddCastAction,
    Link: ButtonLink,
    Mint: ButtonMint,
    Redirect: ButtonRedirect,
    Reset: ButtonReset,
    Transaction: ButtonTransaction,
    Signature: ButtonSignature
});
function normalizeChildren(children) {
    return Array.isArray(children) ? children.join('') : children;
} //# sourceMappingURL=Button.js.map

})()),
"[project]/node_modules/frog/_lib/jsx/jsx-dev-runtime/index.js [app-route] (ecmascript) <export jsxDEV as jsxs>": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "jsxs": ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["jsxDEV"]
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/frog/_lib/jsx/jsx-dev-runtime/index.js [app-route] (ecmascript) <locals>");
"__TURBOPACK__ecmascript__hoisting__location__";

})()),
"[project]/node_modules/frog/_lib/utils/fromQuery.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "fromQuery": ()=>fromQuery
});
function fromQuery(query) {
    const obj = {};
    for (const [key, value] of Object.entries(query)){
        let decoded = decodeURIComponent(value);
        if (decoded.startsWith('#A_')) decoded = decoded.replace('#A_', '').split(',');
        else if (decoded.startsWith('#O_')) decoded = JSON.parse(decoded.replace('#O_', ''));
        // Omit any encoded ampersands.
        obj[key.replace(/^amp;/, '')] = decoded;
    }
    return obj;
} //# sourceMappingURL=fromQuery.js.map

})()),
"[project]/node_modules/frog/_lib/utils/getButtonValues.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "getButtonValues": ()=>getButtonValues
});
function getButtonValues(intents) {
    if (!intents) return [];
    const buttonValues = [];
    for (const intent of intents){
        if (!intent) continue;
        const { property } = intent.props;
        if (!property.match(/^fc:frame:button:(1|2|3|4)$/)) continue;
        buttonValues.push(intent.props['data-value']);
    }
    return buttonValues;
} //# sourceMappingURL=getButtonValues.js.map

})()),
"[project]/node_modules/frog/_lib/utils/getCastActionContext.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "getCastActionContext": ()=>getCastActionContext
});
function getCastActionContext(parameters) {
    const { context } = parameters;
    const { env, frameData, req, verified } = context || {};
    if (!frameData) throw new Error('Frame data must be present for action handlers.');
    return {
        context: {
            actionData: {
                buttonIndex: 1,
                castId: frameData.castId,
                fid: frameData.fid,
                network: frameData.network,
                messageHash: frameData.messageHash,
                timestamp: frameData.timestamp,
                url: frameData.url
            },
            env,
            error: (data)=>({
                    error: data,
                    format: 'castAction',
                    status: 'error'
                }),
            frame: (data)=>({
                    data: {
                        path: data.path,
                        type: 'frame'
                    },
                    format: 'castAction',
                    status: 'success'
                }),
            message: (data)=>({
                    data: {
                        message: data.message,
                        type: 'message'
                    },
                    format: 'castAction',
                    status: 'success'
                }),
            req,
            res: (data)=>({
                    data,
                    format: 'castAction',
                    status: 'success'
                }),
            var: context.var,
            verified
        }
    };
} //# sourceMappingURL=getCastActionContext.js.map

})()),
"[project]/node_modules/frog/_lib/utils/getIntentState.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "getIntentState": ()=>getIntentState
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$components$2f$Button$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/components/Button.js [app-route] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
function getIntentState({ buttonValues, frameData }) {
    const { buttonIndex, inputText } = frameData || {};
    const state = {
        buttonValue: undefined,
        inputText,
        redirect: false,
        reset: false
    };
    if (!buttonValues) return state;
    if (buttonIndex) {
        const buttonIntents = buttonValues;
        const intent = buttonIntents[buttonIndex - 1];
        if (!intent) return state;
        if (intent.startsWith(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$components$2f$Button$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["buttonPrefix"].reset)) state.reset = true;
        else if (intent.startsWith(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$components$2f$Button$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["buttonPrefix"].redirect)) {
            state.redirect = true;
            state.buttonValue = intent.slice(3);
        } else state.buttonValue = intent;
    }
    return state;
} //# sourceMappingURL=getIntentState.js.map

})()),
"[project]/node_modules/frog/_lib/utils/parsePath.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "parsePath": ()=>parsePath
});
function parsePath(path_) {
    let path = path_.split('?')[0];
    if (path.endsWith('/')) path = path.slice(0, -1);
    return path;
} //# sourceMappingURL=parsePath.js.map

})()),
"[project]/node_modules/frog/_lib/utils/getFrameContext.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "getFrameContext": ()=>getFrameContext
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getIntentState$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/getIntentState.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parsePath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/parsePath.js [app-route] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
;
function getFrameContext(parameters) {
    const { context, origin } = parameters;
    const { env, frameData, initialPath, previousButtonValues, req, verified } = context || {};
    const { buttonValue, inputText, redirect, reset } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getIntentState$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getIntentState"])({
        buttonValues: previousButtonValues || [],
        frameData
    });
    const status = (()=>{
        if (redirect) return 'redirect';
        if (reset) return 'initial';
        return context.status || 'initial';
    })();
    // If the user has clicked a reset button, we want to set the URL back to the
    // initial URL.
    const url = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parsePath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parsePath"])(reset ? `${origin}${initialPath}` : context.url);
    let previousState = (()=>{
        if (context.status === 'initial') return parameters.initialState;
        return context?.previousState || parameters.initialState;
    })();
    function deriveState(derive) {
        if (!derive) return previousState;
        const clone = structuredClone(previousState);
        if (derive[Symbol.toStringTag] === 'AsyncFunction') return derive(clone).then(()=>{
            previousState = clone;
            return previousState;
        });
        derive(clone);
        previousState = clone;
        return previousState;
    }
    return {
        context: {
            buttonIndex: frameData?.buttonIndex,
            buttonValue,
            cycle: 'main',
            deriveState: deriveState,
            env,
            error: (data)=>({
                    error: data,
                    format: 'frame',
                    status: 'error'
                }),
            frameData,
            initialPath,
            inputText,
            previousButtonValues,
            previousState: previousState,
            req,
            res: (data)=>({
                    data,
                    format: 'frame',
                    status: 'success'
                }),
            status,
            transactionId: frameData?.transactionId,
            url,
            var: context.var,
            verified
        },
        getState: ()=>previousState
    };
} //# sourceMappingURL=getFrameContext.js.map

})()),
"[project]/node_modules/frog/_lib/utils/getImageContext.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "getImageContext": ()=>getImageContext
});
function getImageContext(parameters) {
    const { context } = parameters;
    const { env, req } = context || {};
    return {
        context: {
            env,
            req,
            res: (data)=>({
                    data,
                    format: 'image',
                    status: 'success'
                }),
            var: context.var
        }
    };
} //# sourceMappingURL=getImageContext.js.map

})()),
"[project]/node_modules/frog/_lib/utils/getImagePaths.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "getImagePaths": ()=>getImagePaths
});
function getImagePaths(path) {
    const imagePaths = [];
    const pathParts = path.split('/');
    // skip the first split result as it's empty
    for(let i = 1; i < pathParts.length; i++){
        if (!pathParts[i]?.startsWith(':') || !pathParts[i]?.endsWith('?')) continue;
        imagePaths.push(`${pathParts.slice(0, i).join('/')}/image`);
    }
    imagePaths.push(`${path}/image`);
    return imagePaths;
} //# sourceMappingURL=getImagePaths.js.map

})()),
"[project]/node_modules/frog/_lib/utils/getRequestUrl.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "getRequestUrl": ()=>getRequestUrl
});
function getRequestUrl(req) {
    const url = new URL(req.url);
    const forwardedHost = req.header('x-forwarded-host');
    url.host = forwardedHost ?? url.host;
    url.protocol = req.header('x-forwarded-proto') ?? url.protocol;
    if (forwardedHost !== undefined && !forwardedHost.startsWith('localhost')) url.port = '';
    return url;
} //# sourceMappingURL=getRequestUrl.js.map

})()),
"[project]/node_modules/frog/_lib/utils/getRouteParameters.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "getRouteParameters": ()=>getRouteParameters
});
function getRouteParameters(...parameters) {
    const options = typeof parameters[parameters.length - 1] === 'object' ? parameters[parameters.length - 1] : undefined;
    const middlewares = [];
    let handler;
    for(let i = parameters.length - (options ? 2 : 1); i > 0; i--){
        if (!handler) handler = parameters[i];
        else middlewares.push(parameters[i]);
    }
    return [
        parameters[0],
        middlewares,
        handler,
        options
    ];
} //# sourceMappingURL=getRouteParameters.js.map

})()),
"[project]/node_modules/frog/_lib/utils/getSignatureContext.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "getSignatureContext": ()=>getSignatureContext
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getIntentState$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/getIntentState.js [app-route] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
function getSignatureContext(parameters) {
    const { context } = parameters;
    const { env, frameData, initialPath, previousButtonValues, previousState, req, status, verified, url } = context || {};
    const { buttonValue, inputText } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getIntentState$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getIntentState"])({
        buttonValues: previousButtonValues || [],
        frameData
    });
    return {
        context: {
            address: frameData?.address,
            buttonIndex: frameData?.buttonIndex,
            buttonValue,
            env,
            error: (data)=>({
                    error: data,
                    format: 'signature',
                    status: 'error'
                }),
            frameData,
            initialPath,
            inputText,
            previousButtonValues,
            previousState,
            req,
            res (parameters) {
                const { chainId, method, params } = parameters;
                const { domain, types, primaryType, message } = params;
                const response = {
                    chainId,
                    method,
                    params: {
                        domain,
                        types,
                        primaryType,
                        // @TODO: fix typing
                        message: message
                    }
                };
                return {
                    data: response,
                    format: 'signature',
                    status: 'success'
                };
            },
            signTypedData (parameters) {
                const { chainId, ...params } = parameters;
                return this.res({
                    params: params,
                    chainId,
                    method: 'eth_signTypedData_v4'
                });
            },
            status,
            var: context.var,
            verified,
            url
        }
    };
} //# sourceMappingURL=getSignatureContext.js.map

})()),
"[project]/node_modules/frog/_lib/utils/getTransactionContext.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "getTransactionContext": ()=>getTransactionContext
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$abi$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/errors/abi.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeFunctionData$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/abi/encodeFunctionData.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$getAbiItem$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/abi/getAbiItem.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getIntentState$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/getIntentState.js [app-route] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
;
function getTransactionContext(parameters) {
    const { context } = parameters;
    const { env, frameData, initialPath, previousButtonValues, previousState, req, status, verified, url } = context || {};
    const { buttonValue, inputText } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getIntentState$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getIntentState"])({
        buttonValues: previousButtonValues || [],
        frameData
    });
    return {
        context: {
            address: frameData?.address,
            buttonIndex: frameData?.buttonIndex,
            buttonValue,
            contract (parameters) {
                const { abi, chainId, functionName, gas, to, args, attribution, value } = parameters;
                const abiItem = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$getAbiItem$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getAbiItem"])({
                    abi: abi,
                    name: functionName,
                    args
                });
                if (!abiItem) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$errors$2f$abi$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AbiFunctionNotFoundError"](functionName);
                const abiErrorItems = abi.filter((item)=>item.type === 'error');
                return this.send({
                    abi: [
                        abiItem,
                        ...abiErrorItems
                    ],
                    attribution,
                    chainId,
                    data: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$encodeFunctionData$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["encodeFunctionData"])({
                        abi,
                        args,
                        functionName
                    }),
                    gas,
                    to,
                    value
                });
            },
            env,
            error: (data)=>({
                    error: data,
                    format: 'transaction',
                    status: 'error'
                }),
            frameData,
            initialPath,
            inputText,
            previousButtonValues,
            previousState,
            req,
            res (parameters) {
                const { attribution, chainId, method, params } = parameters;
                const { abi, data, gas, to, value } = params;
                const response = {
                    attribution,
                    chainId,
                    method,
                    params: {
                        abi,
                        data,
                        to
                    }
                };
                if (gas) response.params.gas = gas.toString();
                if (value) response.params.value = value.toString();
                return {
                    data: response,
                    format: 'transaction',
                    status: 'success'
                };
            },
            send (parameters) {
                return this.res({
                    attribution: parameters.attribution ?? false,
                    chainId: parameters.chainId,
                    method: 'eth_sendTransaction',
                    params: parameters
                });
            },
            status,
            var: context.var,
            verified,
            url
        }
    };
} //# sourceMappingURL=getTransactionContext.js.map

})()),
"[project]/node_modules/frog/_lib/utils/jws.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "sign": ()=>sign,
    "verify": ()=>verify
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$jose$2f$dist$2f$node$2f$esm$2f$jws$2f$compact$2f$sign$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/jose/dist/node/esm/jws/compact/sign.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$jose$2f$dist$2f$node$2f$esm$2f$jws$2f$compact$2f$verify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/jose/dist/node/esm/jws/compact/verify.js [app-route] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
const decoder = new TextDecoder();
const encoder = new TextEncoder();
async function verify(signature, secret) {
    const { payload } = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$jose$2f$dist$2f$node$2f$esm$2f$jws$2f$compact$2f$verify$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["compactVerify"])(signature, encoder.encode(secret));
    return decoder.decode(payload);
}
async function sign(message, secret) {
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$jose$2f$dist$2f$node$2f$esm$2f$jws$2f$compact$2f$sign$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["CompactSign"](encoder.encode(message)).setProtectedHeader({
        alg: 'HS256'
    }).sign(encoder.encode(secret));
} //# sourceMappingURL=jws.js.map

})()),
"[project]/node_modules/frog/_lib/utils/parseBrowserLocation.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "parseBrowserLocation": ()=>parseBrowserLocation
});
function parseBrowserLocation(c, location_, { basePath, path }) {
    let location = location_ || '';
    if (location?.includes(':path') && !path.includes(':path')) location = location.replace(':path', path.replace(/(^\/)|(\/$)/, ''));
    else if (location?.includes(':')) for (const [key, value] of Object.entries(c.req.param()))location = location.replace(`:${key}`, value);
    if (location.includes(':basePath')) location = location.replace(':basePath', basePath.replace(/(^\/)|(\/$)/, ''));
    location = location.replace(/^\/\//, '/');
    return location;
} //# sourceMappingURL=parseBrowserLocation.js.map

})()),
"[project]/node_modules/frog/_lib/utils/parseFonts.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "parseFonts": ()=>parseFonts
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2d$og$2f$lib$2f$utils$2f$loadGoogleFont$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono-og/lib/utils/loadGoogleFont.js [app-route] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
async function parseFonts(fonts) {
    if (!fonts) return undefined;
    return await Promise.all(fonts.map(async (font)=>{
        if (font.source === 'google') return {
            ...font,
            data: await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2d$og$2f$lib$2f$utils$2f$loadGoogleFont$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["loadGoogleFont"])({
                family: font.name,
                weight: font.weight,
                style: font.style
            })
        };
        return font;
    }));
} //# sourceMappingURL=parseFonts.js.map

})()),
"[project]/node_modules/frog/_lib/utils/parseHonoPath.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "parseHonoPath": ()=>parseHonoPath
});
function parseHonoPath(path) {
    if (path.endsWith('/')) return path.slice(0, -1);
    return path;
} //# sourceMappingURL=parseHonoPath.js.map

})()),
"[project]/node_modules/frog/_lib/utils/parseImage.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "parseImage": ()=>parseImage
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parsePath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/parsePath.js [app-route] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
async function parseImage(node_, options) {
    if (!node_) return node_;
    const { assetsUrl, ui } = options;
    if (typeof node_ !== 'object') return node_;
    if (Array.isArray(node_)) return await Promise.all(node_.map(async (e)=>await parseImage(e, {
            assetsUrl,
            ui
        })));
    if (node_ instanceof Promise) return await node_;
    // Handle Fragment `<></>`
    if (node_.tag === '') return await Promise.all(node_.children.map(async (e)=>await parseImage(e, {
            assetsUrl,
            ui
        })));
    let node = node_;
    const direction = node.tag?.direction ?? options.ui.direction ?? (node.props.flexDirection ? node.props.flexDirection === 'column' ? 'horizontal' : 'vertical' : undefined);
    if (typeof node.tag === 'function') {
        node = await node.tag({
            ...node.props,
            __context: {
                direction,
                vars: {
                    ...node.props?.__context?.vars,
                    ...ui?.vars
                }
            },
            children: node.children
        });
        if (!node) return node;
        node.props.__context = undefined;
        node = await parseImage(node, {
            assetsUrl,
            ui: {
                ...ui,
                direction
            }
        });
    }
    if (node.children) node.children = await Promise.all(node.children.map(async (e)=>await parseImage(e, {
            assetsUrl,
            ui: {
                ...ui,
                direction
            }
        })));
    if (node.tag === 'img') {
        const src = node.props.src;
        if (src.startsWith('/')) node.props.src = `${assetsUrl + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parsePath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parsePath"])(src)}`;
    }
    return node;
} //# sourceMappingURL=parseImage.js.map

})()),
"[project]/node_modules/frog/_lib/utils/parseIntents.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "parseIntents": ()=>parseIntents
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$components$2f$Button$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/components/Button.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parsePath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/parsePath.js [app-route] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
;
function parseIntents(intents_, options, counter = {
    button: 1
}) {
    if (!intents_) return [];
    const nodes = intents_;
    const intents = (()=>{
        if (Array.isArray(nodes)) return nodes.map((e)=>parseIntent(e, options, counter));
        if (typeof nodes.children[0] === 'object') return Object.assign(nodes, {
            children: nodes.children.map((e)=>parseIntent(e, options, counter))
        });
        return parseIntent(nodes, options, counter);
    })();
    return (Array.isArray(intents) ? intents : [
        intents
    ]).flat();
}
function parseIntent(node_, options, counter) {
    // Check if the node is a "falsy" node (ie. `null`, `undefined`, `false`, etc).
    const node = !node_ ? {
        children: [],
        props: {},
        tag () {}
    } : node_;
    const props = (()=>{
        if (node.tag.__type === 'button') {
            const value = node.tag({})?.[0]?.props?.['data-value'];
            const buttonProps = {
                ...node.props,
                action: node.props.action ? node.props.action.startsWith('http') ? node.props.action : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parsePath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parsePath"])(node.props.action.startsWith('~') ? options.initialBaseUrl + node.props.action.slice(1) : options.baseUrl + node.props.action) + (options.search && !value?.startsWith(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$components$2f$Button$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["buttonPrefix"].addCastAction) ? `?${options.search}` : '') : undefined,
                children: node.children,
                index: counter.button++
            };
            if ((value?.startsWith(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$components$2f$Button$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["buttonPrefix"].transaction) || value?.startsWith(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$components$2f$Button$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["buttonPrefix"].signature)) && node.props.target) {
                const search = (node.props.target ?? '').split('?')[1];
                buttonProps.target = node.props.target?.startsWith('http') ? node.props.target : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parsePath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parsePath"])(options.baseUrl + node.props.target) + (search ? `?${search}` : '');
            }
            return buttonProps;
        }
        if (node.tag.__type === 'text-input') return {
            ...node.props,
            children: node.children
        };
        return {};
    })();
    const intent = typeof node.tag === 'function' ? node.tag(props) : node;
    if (intent?.tag === '' && Object.keys(intent.props).length === 0) throw new InvalidIntentComponentError();
    if (typeof intent?.tag === 'function' && typeof node.tag === 'function') {
        if (intent.children.length > 1) throw new InvalidIntentComponentError();
        return parseIntent(node.tag(node.props), options, counter);
    }
    return intent;
}
class InvalidIntentComponentError extends Error {
    constructor(){
        super([
            'Intent components must return a single intent element.',
            '',
            'Example:',
            '',
            '```',
            "import { Button } from 'frog'",
            '',
            'function CustomIntent() {',
            '  return <Button>Foo</Button>',
            '}',
            '```'
        ].join('\n'));
    }
} //# sourceMappingURL=parseIntents.js.map

})()),
"[project]/node_modules/frog/_lib/utils/deserializeJson.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "deserializeJson": ()=>deserializeJson
});
function deserializeJson(data = '{}') {
    if (data === 'undefined') return {};
    return JSON.parse(decodeURIComponent(data));
} //# sourceMappingURL=deserializeJson.js.map

})()),
"[project]/node_modules/frog/_lib/protobufs/generated/username_proof_pb.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

// @generated by protoc-gen-es v1.7.2 with parameter "target=ts"
// @generated from file username_proof.proto (syntax proto3)
/* eslint-disable */ // @ts-nocheck
__turbopack_esm__({
    "UserNameProof": ()=>UserNameProof,
    "UserNameType": ()=>UserNameType
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$message$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@bufbuild/protobuf/dist/esm/message.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@bufbuild/protobuf/dist/esm/proto3.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto$2d$int64$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js [app-route] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
var UserNameType;
(function(UserNameType) {
    /**
     * @generated from enum value: USERNAME_TYPE_NONE = 0;
     */ UserNameType[UserNameType["USERNAME_TYPE_NONE"] = 0] = "USERNAME_TYPE_NONE";
    /**
     * @generated from enum value: USERNAME_TYPE_FNAME = 1;
     */ UserNameType[UserNameType["USERNAME_TYPE_FNAME"] = 1] = "USERNAME_TYPE_FNAME";
    /**
     * @generated from enum value: USERNAME_TYPE_ENS_L1 = 2;
     */ UserNameType[UserNameType["USERNAME_TYPE_ENS_L1"] = 2] = "USERNAME_TYPE_ENS_L1";
})(UserNameType || (UserNameType = {}));
// Retrieve enum metadata with: proto3.getEnumType(UserNameType)
__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.setEnumType(UserNameType, "UserNameType", [
    {
        no: 0,
        name: "USERNAME_TYPE_NONE"
    },
    {
        no: 1,
        name: "USERNAME_TYPE_FNAME"
    },
    {
        no: 2,
        name: "USERNAME_TYPE_ENS_L1"
    }
]);
class UserNameProof extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$message$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Message"] {
    constructor(data){
        super();
        /**
         * @generated from field: uint64 timestamp = 1;
         */ Object.defineProperty(this, "timestamp", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto$2d$int64$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["protoInt64"].zero
        });
        /**
         * @generated from field: bytes name = 2;
         */ Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        /**
         * @generated from field: bytes owner = 3;
         */ Object.defineProperty(this, "owner", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        /**
         * @generated from field: bytes signature = 4;
         */ Object.defineProperty(this, "signature", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        /**
         * @generated from field: uint64 fid = 5;
         */ Object.defineProperty(this, "fid", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto$2d$int64$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["protoInt64"].zero
        });
        /**
         * @generated from field: UserNameType type = 6;
         */ Object.defineProperty(this, "type", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: UserNameType.USERNAME_TYPE_NONE
        });
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new UserNameProof().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new UserNameProof().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new UserNameProof().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.equals(UserNameProof, a, b);
    }
}
Object.defineProperty(UserNameProof, "runtime", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"]
});
Object.defineProperty(UserNameProof, "typeName", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: "UserNameProof"
});
Object.defineProperty(UserNameProof, "fields", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.newFieldList(()=>[
            {
                no: 1,
                name: "timestamp",
                kind: "scalar",
                T: 4 /* ScalarType.UINT64 */ 
            },
            {
                no: 2,
                name: "name",
                kind: "scalar",
                T: 12 /* ScalarType.BYTES */ 
            },
            {
                no: 3,
                name: "owner",
                kind: "scalar",
                T: 12 /* ScalarType.BYTES */ 
            },
            {
                no: 4,
                name: "signature",
                kind: "scalar",
                T: 12 /* ScalarType.BYTES */ 
            },
            {
                no: 5,
                name: "fid",
                kind: "scalar",
                T: 4 /* ScalarType.UINT64 */ 
            },
            {
                no: 6,
                name: "type",
                kind: "enum",
                T: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].getEnumType(UserNameType)
            }
        ])
}); //# sourceMappingURL=username_proof_pb.js.map

})()),
"[project]/node_modules/frog/_lib/protobufs/generated/message_pb.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

// @generated by protoc-gen-es v1.7.2 with parameter "target=ts"
// @generated from file message.proto (syntax proto3)
/* eslint-disable */ // @ts-nocheck
__turbopack_esm__({
    "CastAddBody": ()=>CastAddBody,
    "CastId": ()=>CastId,
    "CastRemoveBody": ()=>CastRemoveBody,
    "Embed": ()=>Embed,
    "FarcasterNetwork": ()=>FarcasterNetwork,
    "FrameActionBody": ()=>FrameActionBody,
    "HashScheme": ()=>HashScheme,
    "LinkBody": ()=>LinkBody,
    "Message": ()=>Message,
    "MessageData": ()=>MessageData,
    "MessageType": ()=>MessageType,
    "Protocol": ()=>Protocol,
    "ReactionBody": ()=>ReactionBody,
    "ReactionType": ()=>ReactionType,
    "SignatureScheme": ()=>SignatureScheme,
    "UserDataBody": ()=>UserDataBody,
    "UserDataType": ()=>UserDataType,
    "VerificationAddAddressBody": ()=>VerificationAddAddressBody,
    "VerificationRemoveBody": ()=>VerificationRemoveBody
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$message$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@bufbuild/protobuf/dist/esm/message.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@bufbuild/protobuf/dist/esm/proto3.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto$2d$int64$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$protobufs$2f$generated$2f$username_proof_pb$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/protobufs/generated/username_proof_pb.js [app-route] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
;
var HashScheme;
(function(HashScheme) {
    /**
     * @generated from enum value: HASH_SCHEME_NONE = 0;
     */ HashScheme[HashScheme["NONE"] = 0] = "NONE";
    /**
     * Default scheme for hashing MessageData
     *
     * @generated from enum value: HASH_SCHEME_BLAKE3 = 1;
     */ HashScheme[HashScheme["BLAKE3"] = 1] = "BLAKE3";
})(HashScheme || (HashScheme = {}));
// Retrieve enum metadata with: proto3.getEnumType(HashScheme)
__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.setEnumType(HashScheme, "HashScheme", [
    {
        no: 0,
        name: "HASH_SCHEME_NONE"
    },
    {
        no: 1,
        name: "HASH_SCHEME_BLAKE3"
    }
]);
var SignatureScheme;
(function(SignatureScheme) {
    /**
     * @generated from enum value: SIGNATURE_SCHEME_NONE = 0;
     */ SignatureScheme[SignatureScheme["NONE"] = 0] = "NONE";
    /**
     * Ed25519 signature (default)
     *
     * @generated from enum value: SIGNATURE_SCHEME_ED25519 = 1;
     */ SignatureScheme[SignatureScheme["ED25519"] = 1] = "ED25519";
    /**
     * ECDSA signature using EIP-712 scheme
     *
     * @generated from enum value: SIGNATURE_SCHEME_EIP712 = 2;
     */ SignatureScheme[SignatureScheme["EIP712"] = 2] = "EIP712";
})(SignatureScheme || (SignatureScheme = {}));
// Retrieve enum metadata with: proto3.getEnumType(SignatureScheme)
__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.setEnumType(SignatureScheme, "SignatureScheme", [
    {
        no: 0,
        name: "SIGNATURE_SCHEME_NONE"
    },
    {
        no: 1,
        name: "SIGNATURE_SCHEME_ED25519"
    },
    {
        no: 2,
        name: "SIGNATURE_SCHEME_EIP712"
    }
]);
var MessageType;
(function(MessageType) {
    /**
     * @generated from enum value: MESSAGE_TYPE_NONE = 0;
     */ MessageType[MessageType["NONE"] = 0] = "NONE";
    /**
     * Add a new Cast
     *
     * @generated from enum value: MESSAGE_TYPE_CAST_ADD = 1;
     */ MessageType[MessageType["CAST_ADD"] = 1] = "CAST_ADD";
    /**
     * Remove an existing Cast
     *
     * @generated from enum value: MESSAGE_TYPE_CAST_REMOVE = 2;
     */ MessageType[MessageType["CAST_REMOVE"] = 2] = "CAST_REMOVE";
    /**
     * Add a Reaction to a Cast
     *
     * @generated from enum value: MESSAGE_TYPE_REACTION_ADD = 3;
     */ MessageType[MessageType["REACTION_ADD"] = 3] = "REACTION_ADD";
    /**
     * Remove a Reaction from a Cast
     *
     * @generated from enum value: MESSAGE_TYPE_REACTION_REMOVE = 4;
     */ MessageType[MessageType["REACTION_REMOVE"] = 4] = "REACTION_REMOVE";
    /**
     * Add a new Link
     *
     * @generated from enum value: MESSAGE_TYPE_LINK_ADD = 5;
     */ MessageType[MessageType["LINK_ADD"] = 5] = "LINK_ADD";
    /**
     * Remove an existing Link
     *
     * @generated from enum value: MESSAGE_TYPE_LINK_REMOVE = 6;
     */ MessageType[MessageType["LINK_REMOVE"] = 6] = "LINK_REMOVE";
    /**
     * Add a Verification of an Ethereum Address
     *
     * @generated from enum value: MESSAGE_TYPE_VERIFICATION_ADD_ETH_ADDRESS = 7;
     */ MessageType[MessageType["VERIFICATION_ADD_ETH_ADDRESS"] = 7] = "VERIFICATION_ADD_ETH_ADDRESS";
    /**
     * Remove a Verification
     *
     * @generated from enum value: MESSAGE_TYPE_VERIFICATION_REMOVE = 8;
     */ MessageType[MessageType["VERIFICATION_REMOVE"] = 8] = "VERIFICATION_REMOVE";
    /**
     *  Deprecated
     *  MESSAGE_TYPE_SIGNER_ADD = 9; // Add a new Ed25519 key pair that signs messages for a user
     *  MESSAGE_TYPE_SIGNER_REMOVE = 10; // Remove an Ed25519 key pair that signs messages for a user
     *
     * Add metadata about a user
     *
     * @generated from enum value: MESSAGE_TYPE_USER_DATA_ADD = 11;
     */ MessageType[MessageType["USER_DATA_ADD"] = 11] = "USER_DATA_ADD";
    /**
     * Add or replace a username proof
     *
     * @generated from enum value: MESSAGE_TYPE_USERNAME_PROOF = 12;
     */ MessageType[MessageType["USERNAME_PROOF"] = 12] = "USERNAME_PROOF";
    /**
     * A Farcaster Frame action
     *
     * @generated from enum value: MESSAGE_TYPE_FRAME_ACTION = 13;
     */ MessageType[MessageType["FRAME_ACTION"] = 13] = "FRAME_ACTION";
})(MessageType || (MessageType = {}));
// Retrieve enum metadata with: proto3.getEnumType(MessageType)
__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.setEnumType(MessageType, "MessageType", [
    {
        no: 0,
        name: "MESSAGE_TYPE_NONE"
    },
    {
        no: 1,
        name: "MESSAGE_TYPE_CAST_ADD"
    },
    {
        no: 2,
        name: "MESSAGE_TYPE_CAST_REMOVE"
    },
    {
        no: 3,
        name: "MESSAGE_TYPE_REACTION_ADD"
    },
    {
        no: 4,
        name: "MESSAGE_TYPE_REACTION_REMOVE"
    },
    {
        no: 5,
        name: "MESSAGE_TYPE_LINK_ADD"
    },
    {
        no: 6,
        name: "MESSAGE_TYPE_LINK_REMOVE"
    },
    {
        no: 7,
        name: "MESSAGE_TYPE_VERIFICATION_ADD_ETH_ADDRESS"
    },
    {
        no: 8,
        name: "MESSAGE_TYPE_VERIFICATION_REMOVE"
    },
    {
        no: 11,
        name: "MESSAGE_TYPE_USER_DATA_ADD"
    },
    {
        no: 12,
        name: "MESSAGE_TYPE_USERNAME_PROOF"
    },
    {
        no: 13,
        name: "MESSAGE_TYPE_FRAME_ACTION"
    }
]);
var FarcasterNetwork;
(function(FarcasterNetwork) {
    /**
     * @generated from enum value: FARCASTER_NETWORK_NONE = 0;
     */ FarcasterNetwork[FarcasterNetwork["NONE"] = 0] = "NONE";
    /**
     * Public primary network
     *
     * @generated from enum value: FARCASTER_NETWORK_MAINNET = 1;
     */ FarcasterNetwork[FarcasterNetwork["MAINNET"] = 1] = "MAINNET";
    /**
     * Public test network
     *
     * @generated from enum value: FARCASTER_NETWORK_TESTNET = 2;
     */ FarcasterNetwork[FarcasterNetwork["TESTNET"] = 2] = "TESTNET";
    /**
     * Private test network
     *
     * @generated from enum value: FARCASTER_NETWORK_DEVNET = 3;
     */ FarcasterNetwork[FarcasterNetwork["DEVNET"] = 3] = "DEVNET";
})(FarcasterNetwork || (FarcasterNetwork = {}));
// Retrieve enum metadata with: proto3.getEnumType(FarcasterNetwork)
__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.setEnumType(FarcasterNetwork, "FarcasterNetwork", [
    {
        no: 0,
        name: "FARCASTER_NETWORK_NONE"
    },
    {
        no: 1,
        name: "FARCASTER_NETWORK_MAINNET"
    },
    {
        no: 2,
        name: "FARCASTER_NETWORK_TESTNET"
    },
    {
        no: 3,
        name: "FARCASTER_NETWORK_DEVNET"
    }
]);
var UserDataType;
(function(UserDataType) {
    /**
     * @generated from enum value: USER_DATA_TYPE_NONE = 0;
     */ UserDataType[UserDataType["NONE"] = 0] = "NONE";
    /**
     * Profile Picture for the user
     *
     * @generated from enum value: USER_DATA_TYPE_PFP = 1;
     */ UserDataType[UserDataType["PFP"] = 1] = "PFP";
    /**
     * Display Name for the user
     *
     * @generated from enum value: USER_DATA_TYPE_DISPLAY = 2;
     */ UserDataType[UserDataType["DISPLAY"] = 2] = "DISPLAY";
    /**
     * Bio for the user
     *
     * @generated from enum value: USER_DATA_TYPE_BIO = 3;
     */ UserDataType[UserDataType["BIO"] = 3] = "BIO";
    /**
     * URL of the user
     *
     * @generated from enum value: USER_DATA_TYPE_URL = 5;
     */ UserDataType[UserDataType["URL"] = 5] = "URL";
    /**
     * Preferred Name for the user
     *
     * @generated from enum value: USER_DATA_TYPE_USERNAME = 6;
     */ UserDataType[UserDataType["USERNAME"] = 6] = "USERNAME";
})(UserDataType || (UserDataType = {}));
// Retrieve enum metadata with: proto3.getEnumType(UserDataType)
__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.setEnumType(UserDataType, "UserDataType", [
    {
        no: 0,
        name: "USER_DATA_TYPE_NONE"
    },
    {
        no: 1,
        name: "USER_DATA_TYPE_PFP"
    },
    {
        no: 2,
        name: "USER_DATA_TYPE_DISPLAY"
    },
    {
        no: 3,
        name: "USER_DATA_TYPE_BIO"
    },
    {
        no: 5,
        name: "USER_DATA_TYPE_URL"
    },
    {
        no: 6,
        name: "USER_DATA_TYPE_USERNAME"
    }
]);
var ReactionType;
(function(ReactionType) {
    /**
     * @generated from enum value: REACTION_TYPE_NONE = 0;
     */ ReactionType[ReactionType["NONE"] = 0] = "NONE";
    /**
     * Like the target cast
     *
     * @generated from enum value: REACTION_TYPE_LIKE = 1;
     */ ReactionType[ReactionType["LIKE"] = 1] = "LIKE";
    /**
     * Share target cast to the user's audience
     *
     * @generated from enum value: REACTION_TYPE_RECAST = 2;
     */ ReactionType[ReactionType["RECAST"] = 2] = "RECAST";
})(ReactionType || (ReactionType = {}));
// Retrieve enum metadata with: proto3.getEnumType(ReactionType)
__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.setEnumType(ReactionType, "ReactionType", [
    {
        no: 0,
        name: "REACTION_TYPE_NONE"
    },
    {
        no: 1,
        name: "REACTION_TYPE_LIKE"
    },
    {
        no: 2,
        name: "REACTION_TYPE_RECAST"
    }
]);
var Protocol;
(function(Protocol) {
    /**
     * @generated from enum value: PROTOCOL_ETHEREUM = 0;
     */ Protocol[Protocol["ETHEREUM"] = 0] = "ETHEREUM";
    /**
     * @generated from enum value: PROTOCOL_SOLANA = 1;
     */ Protocol[Protocol["SOLANA"] = 1] = "SOLANA";
})(Protocol || (Protocol = {}));
// Retrieve enum metadata with: proto3.getEnumType(Protocol)
__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.setEnumType(Protocol, "Protocol", [
    {
        no: 0,
        name: "PROTOCOL_ETHEREUM"
    },
    {
        no: 1,
        name: "PROTOCOL_SOLANA"
    }
]);
class Message extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$message$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Message"] {
    constructor(data){
        super();
        /**
         * Contents of the message
         *
         * @generated from field: MessageData data = 1;
         */ Object.defineProperty(this, "data", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * Hash digest of data
         *
         * @generated from field: bytes hash = 2;
         */ Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        /**
         * Hash scheme that produced the hash digest
         *
         * @generated from field: HashScheme hash_scheme = 3;
         */ Object.defineProperty(this, "hashScheme", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: HashScheme.NONE
        });
        /**
         * Signature of the hash digest
         *
         * @generated from field: bytes signature = 4;
         */ Object.defineProperty(this, "signature", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        /**
         * Signature scheme that produced the signature
         *
         * @generated from field: SignatureScheme signature_scheme = 5;
         */ Object.defineProperty(this, "signatureScheme", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: SignatureScheme.NONE
        });
        /**
         * Public key or address of the key pair that produced the signature
         *
         * @generated from field: bytes signer = 6;
         */ Object.defineProperty(this, "signer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        /**
         * MessageData serialized to bytes if using protobuf serialization other than ts-proto
         *
         * @generated from field: optional bytes data_bytes = 7;
         */ Object.defineProperty(this, "dataBytes", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Message().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Message().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Message().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.equals(Message, a, b);
    }
}
Object.defineProperty(Message, "runtime", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"]
});
Object.defineProperty(Message, "typeName", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: "Message"
});
Object.defineProperty(Message, "fields", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.newFieldList(()=>[
            {
                no: 1,
                name: "data",
                kind: "message",
                T: MessageData
            },
            {
                no: 2,
                name: "hash",
                kind: "scalar",
                T: 12 /* ScalarType.BYTES */ 
            },
            {
                no: 3,
                name: "hash_scheme",
                kind: "enum",
                T: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].getEnumType(HashScheme)
            },
            {
                no: 4,
                name: "signature",
                kind: "scalar",
                T: 12 /* ScalarType.BYTES */ 
            },
            {
                no: 5,
                name: "signature_scheme",
                kind: "enum",
                T: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].getEnumType(SignatureScheme)
            },
            {
                no: 6,
                name: "signer",
                kind: "scalar",
                T: 12 /* ScalarType.BYTES */ 
            },
            {
                no: 7,
                name: "data_bytes",
                kind: "scalar",
                T: 12 /* ScalarType.BYTES */ ,
                opt: true
            }
        ])
});
class MessageData extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$message$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Message"] {
    constructor(data){
        super();
        /**
         * Type of message contained in the body
         *
         * @generated from field: MessageType type = 1;
         */ Object.defineProperty(this, "type", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: MessageType.NONE
        });
        /**
         * Farcaster ID of the user producing the message
         *
         * @generated from field: uint64 fid = 2;
         */ Object.defineProperty(this, "fid", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto$2d$int64$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["protoInt64"].zero
        });
        /**
         * Farcaster epoch timestamp in seconds
         *
         * @generated from field: uint32 timestamp = 3;
         */ Object.defineProperty(this, "timestamp", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        /**
         * Farcaster network the message is intended for
         *
         * @generated from field: FarcasterNetwork network = 4;
         */ Object.defineProperty(this, "network", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: FarcasterNetwork.NONE
        });
        /**
         * @generated from oneof MessageData.body
         */ Object.defineProperty(this, "body", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: {
                case: undefined
            }
        });
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new MessageData().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new MessageData().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new MessageData().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.equals(MessageData, a, b);
    }
}
Object.defineProperty(MessageData, "runtime", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"]
});
Object.defineProperty(MessageData, "typeName", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: "MessageData"
});
Object.defineProperty(MessageData, "fields", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.newFieldList(()=>[
            {
                no: 1,
                name: "type",
                kind: "enum",
                T: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].getEnumType(MessageType)
            },
            {
                no: 2,
                name: "fid",
                kind: "scalar",
                T: 4 /* ScalarType.UINT64 */ 
            },
            {
                no: 3,
                name: "timestamp",
                kind: "scalar",
                T: 13 /* ScalarType.UINT32 */ 
            },
            {
                no: 4,
                name: "network",
                kind: "enum",
                T: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].getEnumType(FarcasterNetwork)
            },
            {
                no: 5,
                name: "cast_add_body",
                kind: "message",
                T: CastAddBody,
                oneof: "body"
            },
            {
                no: 6,
                name: "cast_remove_body",
                kind: "message",
                T: CastRemoveBody,
                oneof: "body"
            },
            {
                no: 7,
                name: "reaction_body",
                kind: "message",
                T: ReactionBody,
                oneof: "body"
            },
            {
                no: 9,
                name: "verification_add_address_body",
                kind: "message",
                T: VerificationAddAddressBody,
                oneof: "body"
            },
            {
                no: 10,
                name: "verification_remove_body",
                kind: "message",
                T: VerificationRemoveBody,
                oneof: "body"
            },
            {
                no: 12,
                name: "user_data_body",
                kind: "message",
                T: UserDataBody,
                oneof: "body"
            },
            {
                no: 14,
                name: "link_body",
                kind: "message",
                T: LinkBody,
                oneof: "body"
            },
            {
                no: 15,
                name: "username_proof_body",
                kind: "message",
                T: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$protobufs$2f$generated$2f$username_proof_pb$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["UserNameProof"],
                oneof: "body"
            },
            {
                no: 16,
                name: "frame_action_body",
                kind: "message",
                T: FrameActionBody,
                oneof: "body"
            }
        ])
});
class UserDataBody extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$message$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Message"] {
    constructor(data){
        super();
        /**
         * Type of metadata
         *
         * @generated from field: UserDataType type = 1;
         */ Object.defineProperty(this, "type", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: UserDataType.NONE
        });
        /**
         * Value of the metadata
         *
         * @generated from field: string value = 2;
         */ Object.defineProperty(this, "value", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ""
        });
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new UserDataBody().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new UserDataBody().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new UserDataBody().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.equals(UserDataBody, a, b);
    }
}
Object.defineProperty(UserDataBody, "runtime", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"]
});
Object.defineProperty(UserDataBody, "typeName", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: "UserDataBody"
});
Object.defineProperty(UserDataBody, "fields", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.newFieldList(()=>[
            {
                no: 1,
                name: "type",
                kind: "enum",
                T: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].getEnumType(UserDataType)
            },
            {
                no: 2,
                name: "value",
                kind: "scalar",
                T: 9 /* ScalarType.STRING */ 
            }
        ])
});
class Embed extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$message$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Message"] {
    constructor(data){
        super();
        /**
         * @generated from oneof Embed.embed
         */ Object.defineProperty(this, "embed", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: {
                case: undefined
            }
        });
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Embed().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Embed().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Embed().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.equals(Embed, a, b);
    }
}
Object.defineProperty(Embed, "runtime", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"]
});
Object.defineProperty(Embed, "typeName", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: "Embed"
});
Object.defineProperty(Embed, "fields", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.newFieldList(()=>[
            {
                no: 1,
                name: "url",
                kind: "scalar",
                T: 9 /* ScalarType.STRING */ ,
                oneof: "embed"
            },
            {
                no: 2,
                name: "cast_id",
                kind: "message",
                T: CastId,
                oneof: "embed"
            }
        ])
});
class CastAddBody extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$message$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Message"] {
    constructor(data){
        super();
        /**
         * URLs to be embedded in the cast
         *
         * @generated from field: repeated string embeds_deprecated = 1;
         */ Object.defineProperty(this, "embedsDeprecated", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
        /**
         * Fids mentioned in the cast
         *
         * @generated from field: repeated uint64 mentions = 2;
         */ Object.defineProperty(this, "mentions", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
        /**
         * @generated from oneof CastAddBody.parent
         */ Object.defineProperty(this, "parent", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: {
                case: undefined
            }
        });
        /**
         * Text of the cast
         *
         * @generated from field: string text = 4;
         */ Object.defineProperty(this, "text", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ""
        });
        /**
         * Positions of the mentions in the text
         *
         * @generated from field: repeated uint32 mentions_positions = 5;
         */ Object.defineProperty(this, "mentionsPositions", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
        /**
         * URLs or cast ids to be embedded in the cast
         *
         * @generated from field: repeated Embed embeds = 6;
         */ Object.defineProperty(this, "embeds", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CastAddBody().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CastAddBody().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CastAddBody().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.equals(CastAddBody, a, b);
    }
}
Object.defineProperty(CastAddBody, "runtime", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"]
});
Object.defineProperty(CastAddBody, "typeName", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: "CastAddBody"
});
Object.defineProperty(CastAddBody, "fields", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.newFieldList(()=>[
            {
                no: 1,
                name: "embeds_deprecated",
                kind: "scalar",
                T: 9 /* ScalarType.STRING */ ,
                repeated: true
            },
            {
                no: 2,
                name: "mentions",
                kind: "scalar",
                T: 4 /* ScalarType.UINT64 */ ,
                repeated: true
            },
            {
                no: 3,
                name: "parent_cast_id",
                kind: "message",
                T: CastId,
                oneof: "parent"
            },
            {
                no: 7,
                name: "parent_url",
                kind: "scalar",
                T: 9 /* ScalarType.STRING */ ,
                oneof: "parent"
            },
            {
                no: 4,
                name: "text",
                kind: "scalar",
                T: 9 /* ScalarType.STRING */ 
            },
            {
                no: 5,
                name: "mentions_positions",
                kind: "scalar",
                T: 13 /* ScalarType.UINT32 */ ,
                repeated: true
            },
            {
                no: 6,
                name: "embeds",
                kind: "message",
                T: Embed,
                repeated: true
            }
        ])
});
class CastRemoveBody extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$message$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Message"] {
    constructor(data){
        super();
        /**
         * Hash of the cast to remove
         *
         * @generated from field: bytes target_hash = 1;
         */ Object.defineProperty(this, "targetHash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CastRemoveBody().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CastRemoveBody().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CastRemoveBody().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.equals(CastRemoveBody, a, b);
    }
}
Object.defineProperty(CastRemoveBody, "runtime", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"]
});
Object.defineProperty(CastRemoveBody, "typeName", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: "CastRemoveBody"
});
Object.defineProperty(CastRemoveBody, "fields", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.newFieldList(()=>[
            {
                no: 1,
                name: "target_hash",
                kind: "scalar",
                T: 12 /* ScalarType.BYTES */ 
            }
        ])
});
class CastId extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$message$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Message"] {
    constructor(data){
        super();
        /**
         * Fid of the user who created the cast
         *
         * @generated from field: uint64 fid = 1;
         */ Object.defineProperty(this, "fid", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto$2d$int64$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["protoInt64"].zero
        });
        /**
         * Hash of the cast
         *
         * @generated from field: bytes hash = 2;
         */ Object.defineProperty(this, "hash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new CastId().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new CastId().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new CastId().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.equals(CastId, a, b);
    }
}
Object.defineProperty(CastId, "runtime", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"]
});
Object.defineProperty(CastId, "typeName", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: "CastId"
});
Object.defineProperty(CastId, "fields", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.newFieldList(()=>[
            {
                no: 1,
                name: "fid",
                kind: "scalar",
                T: 4 /* ScalarType.UINT64 */ 
            },
            {
                no: 2,
                name: "hash",
                kind: "scalar",
                T: 12 /* ScalarType.BYTES */ 
            }
        ])
});
class ReactionBody extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$message$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Message"] {
    constructor(data){
        super();
        /**
         * Type of reaction
         *
         * @generated from field: ReactionType type = 1;
         */ Object.defineProperty(this, "type", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ReactionType.NONE
        });
        /**
         * @generated from oneof ReactionBody.target
         */ Object.defineProperty(this, "target", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: {
                case: undefined
            }
        });
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ReactionBody().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ReactionBody().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ReactionBody().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.equals(ReactionBody, a, b);
    }
}
Object.defineProperty(ReactionBody, "runtime", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"]
});
Object.defineProperty(ReactionBody, "typeName", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: "ReactionBody"
});
Object.defineProperty(ReactionBody, "fields", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.newFieldList(()=>[
            {
                no: 1,
                name: "type",
                kind: "enum",
                T: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].getEnumType(ReactionType)
            },
            {
                no: 2,
                name: "target_cast_id",
                kind: "message",
                T: CastId,
                oneof: "target"
            },
            {
                no: 3,
                name: "target_url",
                kind: "scalar",
                T: 9 /* ScalarType.STRING */ ,
                oneof: "target"
            }
        ])
});
class VerificationAddAddressBody extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$message$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Message"] {
    constructor(data){
        super();
        /**
         * Address being verified for a given Protocol
         *
         * @generated from field: bytes address = 1;
         */ Object.defineProperty(this, "address", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        /**
         * Signature produced by the user's address for a given Protocol
         *
         * @generated from field: bytes claim_signature = 2;
         */ Object.defineProperty(this, "claimSignature", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        /**
         * Hash of the latest Ethereum block when the signature was produced
         *
         * @generated from field: bytes block_hash = 3;
         */ Object.defineProperty(this, "blockHash", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        /**
         * Type of verification. 0 = EOA, 1 = contract
         *
         * @generated from field: uint32 verification_type = 4;
         */ Object.defineProperty(this, "verificationType", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        /**
         * 0 for EOA verifications, 1 or 10 for contract verifications
         *
         * @generated from field: uint32 chain_id = 5;
         */ Object.defineProperty(this, "chainId", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        /**
         * Protocol of the Verification
         *
         * @generated from field: Protocol protocol = 7;
         */ Object.defineProperty(this, "protocol", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: Protocol.ETHEREUM
        });
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new VerificationAddAddressBody().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new VerificationAddAddressBody().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new VerificationAddAddressBody().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.equals(VerificationAddAddressBody, a, b);
    }
}
Object.defineProperty(VerificationAddAddressBody, "runtime", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"]
});
Object.defineProperty(VerificationAddAddressBody, "typeName", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: "VerificationAddAddressBody"
});
Object.defineProperty(VerificationAddAddressBody, "fields", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.newFieldList(()=>[
            {
                no: 1,
                name: "address",
                kind: "scalar",
                T: 12 /* ScalarType.BYTES */ 
            },
            {
                no: 2,
                name: "claim_signature",
                kind: "scalar",
                T: 12 /* ScalarType.BYTES */ 
            },
            {
                no: 3,
                name: "block_hash",
                kind: "scalar",
                T: 12 /* ScalarType.BYTES */ 
            },
            {
                no: 4,
                name: "verification_type",
                kind: "scalar",
                T: 13 /* ScalarType.UINT32 */ 
            },
            {
                no: 5,
                name: "chain_id",
                kind: "scalar",
                T: 13 /* ScalarType.UINT32 */ 
            },
            {
                no: 7,
                name: "protocol",
                kind: "enum",
                T: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].getEnumType(Protocol)
            }
        ])
});
class VerificationRemoveBody extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$message$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Message"] {
    constructor(data){
        super();
        /**
         * Address of the Verification to remove
         *
         * @generated from field: bytes address = 1;
         */ Object.defineProperty(this, "address", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        /**
         * Protocol of the Verification to remove
         *
         * @generated from field: Protocol protocol = 2;
         */ Object.defineProperty(this, "protocol", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: Protocol.ETHEREUM
        });
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new VerificationRemoveBody().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new VerificationRemoveBody().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new VerificationRemoveBody().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.equals(VerificationRemoveBody, a, b);
    }
}
Object.defineProperty(VerificationRemoveBody, "runtime", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"]
});
Object.defineProperty(VerificationRemoveBody, "typeName", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: "VerificationRemoveBody"
});
Object.defineProperty(VerificationRemoveBody, "fields", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.newFieldList(()=>[
            {
                no: 1,
                name: "address",
                kind: "scalar",
                T: 12 /* ScalarType.BYTES */ 
            },
            {
                no: 2,
                name: "protocol",
                kind: "enum",
                T: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].getEnumType(Protocol)
            }
        ])
});
class LinkBody extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$message$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Message"] {
    constructor(data){
        super();
        /**
         * Type of link, <= 8 characters
         *
         * @generated from field: string type = 1;
         */ Object.defineProperty(this, "type", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ""
        });
        /**
         * User-defined timestamp that preserves original timestamp when message.data.timestamp needs to be updated for compaction
         *
         * @generated from field: optional uint32 displayTimestamp = 2;
         */ Object.defineProperty(this, "displayTimestamp", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * @generated from oneof LinkBody.target
         */ Object.defineProperty(this, "target", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: {
                case: undefined
            }
        });
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new LinkBody().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new LinkBody().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new LinkBody().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.equals(LinkBody, a, b);
    }
}
Object.defineProperty(LinkBody, "runtime", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"]
});
Object.defineProperty(LinkBody, "typeName", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: "LinkBody"
});
Object.defineProperty(LinkBody, "fields", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.newFieldList(()=>[
            {
                no: 1,
                name: "type",
                kind: "scalar",
                T: 9 /* ScalarType.STRING */ 
            },
            {
                no: 2,
                name: "displayTimestamp",
                kind: "scalar",
                T: 13 /* ScalarType.UINT32 */ ,
                opt: true
            },
            {
                no: 3,
                name: "target_fid",
                kind: "scalar",
                T: 4 /* ScalarType.UINT64 */ ,
                oneof: "target"
            }
        ])
});
class FrameActionBody extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$message$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Message"] {
    constructor(data){
        super();
        /**
         * URL of the Frame triggering the action
         *
         * @generated from field: bytes url = 1;
         */ Object.defineProperty(this, "url", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        /**
         * The index of the button pressed (1-4)
         *
         * @generated from field: uint32 button_index = 2;
         */ Object.defineProperty(this, "buttonIndex", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        /**
         * The cast which contained the frame url
         *
         * @generated from field: CastId cast_id = 3;
         */ Object.defineProperty(this, "castId", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * Text input from the user, if present
         *
         * @generated from field: bytes input_text = 4;
         */ Object.defineProperty(this, "inputText", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        /**
         * Serialized frame state value
         *
         * @generated from field: bytes state = 5;
         */ Object.defineProperty(this, "state", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        /**
         * Chain-specific transaction ID for tx actions
         *
         * @generated from field: bytes transaction_id = 6;
         */ Object.defineProperty(this, "transactionId", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        /**
         * Chain-specific address for tx actions
         *
         * @generated from field: bytes address = 7;
         */ Object.defineProperty(this, "address", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new FrameActionBody().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new FrameActionBody().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new FrameActionBody().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.equals(FrameActionBody, a, b);
    }
}
Object.defineProperty(FrameActionBody, "runtime", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"]
});
Object.defineProperty(FrameActionBody, "typeName", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: "FrameActionBody"
});
Object.defineProperty(FrameActionBody, "fields", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$bufbuild$2f$protobuf$2f$dist$2f$esm$2f$proto3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["proto3"].util.newFieldList(()=>[
            {
                no: 1,
                name: "url",
                kind: "scalar",
                T: 12 /* ScalarType.BYTES */ 
            },
            {
                no: 2,
                name: "button_index",
                kind: "scalar",
                T: 13 /* ScalarType.UINT32 */ 
            },
            {
                no: 3,
                name: "cast_id",
                kind: "message",
                T: CastId
            },
            {
                no: 4,
                name: "input_text",
                kind: "scalar",
                T: 12 /* ScalarType.BYTES */ 
            },
            {
                no: 5,
                name: "state",
                kind: "scalar",
                T: 12 /* ScalarType.BYTES */ 
            },
            {
                no: 6,
                name: "transaction_id",
                kind: "scalar",
                T: 12 /* ScalarType.BYTES */ 
            },
            {
                no: 7,
                name: "address",
                kind: "scalar",
                T: 12 /* ScalarType.BYTES */ 
            }
        ])
}); //# sourceMappingURL=message_pb.js.map

})()),
"[project]/node_modules/frog/_lib/utils/verifyFrame.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "messageToFrameData": ()=>messageToFrameData,
    "verifyFrame": ()=>verifyFrame
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/encoding/toHex.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromBytes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/encoding/fromBytes.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toBytes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/utils/encoding/toBytes.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$protobufs$2f$generated$2f$message_pb$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/protobufs/generated/message_pb.js [app-route] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
;
async function verifyFrame({ frameUrl, hub, trustedData, url }) {
    const body = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toBytes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["hexToBytes"])(`0x${trustedData.messageBytes}`);
    const response = hub.verifyFrame ? await hub.verifyFrame({
        trustedData
    }) : await fetch(`${hub.apiUrl}/v1/validateMessage`, {
        ...hub.fetchOptions,
        method: 'POST',
        headers: {
            'Content-Type': 'application/octet-stream',
            ...hub.fetchOptions?.headers
        },
        body
    }).then((res)=>res.json());
    if (!response.valid) throw new Error(`message is invalid. ${response.details || response.message}`);
    if (new URL(url).origin !== new URL(frameUrl).origin) throw new Error(`Invalid frame url: ${frameUrl}. Expected: ${url}.`);
    const message = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$protobufs$2f$generated$2f$message_pb$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Message"].fromBinary(body);
    const frameData = messageToFrameData(message);
    return {
        frameData
    };
}
function messageToFrameData(message) {
    const frameActionBody = message.data?.body.value;
    const frameData = {
        address: frameActionBody.address ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bytesToHex"])(frameActionBody.address) : undefined,
        castId: {
            fid: Number(frameActionBody.castId?.fid),
            hash: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bytesToHex"])(frameActionBody.castId?.hash)
        },
        fid: Number(message.data?.fid),
        messageHash: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bytesToHex"])(message.hash),
        network: message.data?.network,
        timestamp: message.data?.timestamp,
        url: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromBytes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bytesToString"])(frameActionBody.url),
        buttonIndex: frameActionBody.buttonIndex,
        inputText: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromBytes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bytesToString"])(frameActionBody.inputText),
        state: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$fromBytes$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bytesToString"])(frameActionBody.state),
        transactionId: frameActionBody.transactionId ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$encoding$2f$toHex$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bytesToHex"])(frameActionBody.transactionId) : undefined
    };
    return frameData;
} //# sourceMappingURL=verifyFrame.js.map

})()),
"[project]/node_modules/frog/_lib/utils/requestBodyToContext.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "requestBodyToContext": ()=>requestBodyToContext
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$deserializeJson$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/deserializeJson.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$fromQuery$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/fromQuery.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getRequestUrl$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/getRequestUrl.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$jws$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/jws.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$verifyFrame$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/verifyFrame.js [app-route] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
;
;
;
;
async function requestBodyToContext(c, { hub, secret, verify = true }) {
    const { trustedData, untrustedData } = await c.req.json().catch(()=>{}) || {};
    const { initialPath, previousState, previousButtonValues } = await (async ()=>{
        if (untrustedData?.state) {
            const state = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$deserializeJson$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["deserializeJson"])(untrustedData.state);
            if (secret && state.previousState) state.previousState = JSON.parse(await __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$jws$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.verify(state.previousState, secret));
            return state;
        }
        if (c.req.query()) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$fromQuery$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["fromQuery"])(c.req.query());
        return {};
    })();
    const url = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getRequestUrl$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getRequestUrl"])(c.req);
    const trustedFrameData = await (async ()=>{
        if (verify === false) return null;
        if (!trustedData) return null;
        if (!hub) return null;
        try {
            const { frameData } = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$verifyFrame$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["verifyFrame"])({
                hub,
                frameUrl: untrustedData.url,
                trustedData,
                url: url.href
            });
            return {
                ...frameData,
                state: frameData.state || untrustedData.state
            };
        } catch (err) {
            if (verify === 'silent') return null;
            throw err;
        }
    })();
    return {
        env: c.env,
        initialPath: initialPath ? initialPath : url.pathname,
        previousState,
        previousButtonValues,
        frameData: trustedFrameData || untrustedData,
        req: c.req,
        status: c.req.method === 'POST' ? 'response' : 'initial',
        url: url.href,
        var: c.var,
        verified: Boolean(trustedFrameData)
    };
} //# sourceMappingURL=requestBodyToContext.js.map

})()),
"[project]/node_modules/frog/_lib/utils/serializeJson.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "serializeJson": ()=>serializeJson
});
function serializeJson(data = {}) {
    return encodeURIComponent(JSON.stringify(data));
} //# sourceMappingURL=serializeJson.js.map

})()),
"[project]/node_modules/frog/_lib/utils/toSearchParams.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

// If this changes, update in dev/components/Preview.tsx as well
__turbopack_esm__({
    "toSearchParams": ()=>toSearchParams
});
function toSearchParams(object) {
    const params = new URLSearchParams();
    for (const [key, value] of Object.entries(object)){
        const encoded = (()=>{
            if (typeof value === 'string') return encodeURIComponent(value);
            if (typeof value === 'number') return value.toString();
            if (typeof value === 'boolean') return value.toString();
            if (typeof value === 'object' && value !== null) {
                return encodeURIComponent(Array.isArray(value) ? `#A_${value.join(',')}` : `#O_${JSON.stringify(value)}`);
            }
            return undefined;
        })();
        if (encoded) params.set(key, encoded);
    }
    return params;
} //# sourceMappingURL=toSearchParams.js.map

})()),
"[project]/node_modules/frog/_lib/version.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "version": ()=>version
});
const version = '0.14.1'; //# sourceMappingURL=version.js.map

})()),
"[project]/node_modules/frog/_lib/frog-base.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, a: __turbopack_async_module__, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_async_module__(async (__turbopack_handle_async_dependencies__, __turbopack_async_result__) => { try {
__turbopack_esm__({
    "FrogBase": ()=>FrogBase
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__ = __turbopack_import__("[project]/node_modules/frog/_lib/jsx/jsx-dev-runtime/index.js [app-route] (ecmascript) <export jsxDEV as jsx>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$jsx$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/jsx/base.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsxs$3e$__ = __turbopack_import__("[project]/node_modules/frog/_lib/jsx/jsx-dev-runtime/index.js [app-route] (ecmascript) <export jsxDEV as jsxs>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$detect$2d$browser$2f$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/detect-browser/es/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/hono/dist/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$hono$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/hono.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2d$og$2f$lib$2f$response$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono-og/lib/response.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$dev$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/helper/dev/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$html$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/hono/dist/helper/html/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$html$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/hono/dist/helper/html/index.js [app-route] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lz$2d$string$2f$libs$2f$lz$2d$string$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/lz-string/libs/lz-string.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$path$2d$browserify$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/path-browserify/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$fromQuery$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/fromQuery.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getButtonValues$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/getButtonValues.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getCastActionContext$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/getCastActionContext.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getFrameContext$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/getFrameContext.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getImageContext$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/getImageContext.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getImagePaths$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/getImagePaths.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getRequestUrl$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/getRequestUrl.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getRouteParameters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/getRouteParameters.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getSignatureContext$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/getSignatureContext.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getTransactionContext$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/getTransactionContext.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$jws$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/jws.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parseBrowserLocation$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/parseBrowserLocation.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parseFonts$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/parseFonts.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parseHonoPath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/parseHonoPath.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parseImage$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/parseImage.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parseIntents$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/parseIntents.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parsePath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/parsePath.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$requestBodyToContext$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/requestBodyToContext.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$serializeJson$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/serializeJson.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$toSearchParams$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/toSearchParams.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$version$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/version.js [app-route] (ecmascript)");
var __turbopack_async_dependencies__ = __turbopack_handle_async_dependencies__([
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2d$og$2f$lib$2f$response$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__
]);
[__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2d$og$2f$lib$2f$response$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__] = __turbopack_async_dependencies__.then ? (await __turbopack_async_dependencies__)() : __turbopack_async_dependencies__;
"__TURBOPACK__ecmascript__hoisting__location__";
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
class FrogBase {
    constructor(parameters){
        // Note: not using native `private` fields to avoid tslib being injected
        // into bundled code.
        Object.defineProperty(this, "_initialState", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: undefined
        });
        /** Path for assets. */ Object.defineProperty(this, "assetsPath", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Base path of the server instance. */ Object.defineProperty(this, "basePath", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** URL to redirect to when the user is coming to the page via a browser. */ Object.defineProperty(this, "browserLocation", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "dev", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "headers", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Hono instance. */ Object.defineProperty(this, "hono", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Farcaster Hub API URL. */ Object.defineProperty(this, "hubApiUrl", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Farcaster Hub API config. */ Object.defineProperty(this, "hub", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Image aspect ratio. */ Object.defineProperty(this, "imageAspectRatio", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: '1.91:1'
        });
        /** Image options. */ Object.defineProperty(this, "imageOptions", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Origin URL of the server instance. */ Object.defineProperty(this, "origin", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "fetch", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "get", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "post", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Key used to sign secret data. */ Object.defineProperty(this, "secret", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Title of the frame to be set at `og:title` **/ Object.defineProperty(this, "title", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** FrogUI configuration. */ Object.defineProperty(this, "ui", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Whether or not frames should be verified. */ Object.defineProperty(this, "verify", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: true
        });
        Object.defineProperty(this, "metaTags", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "_dev", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "version", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$version$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["version"]
        });
        Object.defineProperty(this, "castAction", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: (...parameters)=>{
                const [path, middlewares, handler, options] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getRouteParameters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getRouteParameters"])(...parameters);
                const { verify = this.verify } = options;
                // Cast Action Route (implements GET).
                if ('handler' in options) {
                    this.hono.get((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parseHonoPath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseHonoPath"])(path), ...middlewares, async (c)=>{
                        const url = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getRequestUrl$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getRequestUrl"])(c.req);
                        const { aboutUrl, name, description, icon } = await options.handler(c);
                        return c.json({
                            aboutUrl,
                            action: {
                                type: 'post'
                            },
                            name,
                            description,
                            icon,
                            postUrl: url
                        });
                    });
                } else {
                    const { aboutUrl, name, description, icon } = options;
                    this.hono.get((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parseHonoPath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseHonoPath"])(path), ...middlewares, async (c)=>{
                        const url = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getRequestUrl$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getRequestUrl"])(c.req);
                        return c.json({
                            aboutUrl,
                            action: {
                                type: 'post'
                            },
                            name,
                            description,
                            icon,
                            postUrl: url
                        });
                    });
                }
                // Cast Action Route (implements POST).
                this.hono.post((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parseHonoPath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseHonoPath"])(path), ...middlewares, async (c)=>{
                    const url = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getRequestUrl$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getRequestUrl"])(c.req);
                    const origin = this.origin ?? url.origin;
                    const baseUrl = origin + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parsePath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parsePath"])(this.basePath);
                    const { context } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getCastActionContext$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getCastActionContext"])({
                        context: await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$requestBodyToContext$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["requestBodyToContext"])(c, {
                            hub: this.hub || (this.hubApiUrl ? {
                                apiUrl: this.hubApiUrl
                            } : undefined),
                            secret: this.secret,
                            verify
                        })
                    });
                    const response = await handler(context);
                    if (response instanceof Response) return response;
                    if (response.status === 'error') {
                        c.status(response.error.statusCode ?? 400);
                        return c.json({
                            message: response.error.message
                        });
                    }
                    if (response.data.type === 'frame') {
                        const framePath = response.data.path;
                        return c.json({
                            frameUrl: framePath.startsWith('http') ? framePath : baseUrl + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parsePath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parsePath"])(framePath),
                            type: 'frame'
                        });
                    }
                    const { message, link } = response.data;
                    return c.json({
                        message,
                        link,
                        type: 'message'
                    });
                });
                return this;
            }
        });
        Object.defineProperty(this, "frame", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: (...parameters)=>{
                const [path, middlewares, handler, options = {}] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getRouteParameters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getRouteParameters"])(...parameters);
                const { verify = this.verify } = options;
                // OG Image Route
                const imagePaths = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getImagePaths$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getImagePaths"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parseHonoPath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseHonoPath"])(path));
                for (const imagePath of imagePaths){
                    this.hono.get(imagePath, async (c)=>{
                        const defaultImageOptions = await (async ()=>{
                            if (typeof this.imageOptions === 'function') return await this.imageOptions();
                            return this.imageOptions;
                        })();
                        const fonts = await (async ()=>{
                            if (this.ui?.vars?.fonts) return Object.values(this.ui?.vars.fonts).flat();
                            if (typeof options?.fonts === 'function') return await options.fonts();
                            if (options?.fonts) return options.fonts;
                            return defaultImageOptions?.fonts;
                        })();
                        const { headers = this.headers, image, imageOptions = defaultImageOptions } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$fromQuery$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["fromQuery"])(c.req.query());
                        const image_ = JSON.parse(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lz$2d$string$2f$libs$2f$lz$2d$string$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].decompressFromEncodedURIComponent(image));
                        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2d$og$2f$lib$2f$response$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["ImageResponse"](image_, {
                            width: 1200,
                            height: 630,
                            ...imageOptions,
                            format: imageOptions?.format ?? 'png',
                            fonts: await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parseFonts$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseFonts"])(fonts),
                            headers: imageOptions?.headers ?? headers
                        });
                    });
                }
                // Frame Route (implements GET & POST).
                this.hono.use((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parseHonoPath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseHonoPath"])(path), ...middlewares, async (c)=>{
                    const url = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getRequestUrl$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getRequestUrl"])(c.req);
                    const origin = this.origin ?? url.origin;
                    const assetsUrl = origin + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parsePath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parsePath"])(this.assetsPath);
                    const baseUrl = origin + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parsePath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parsePath"])(this.basePath);
                    const initialBaseUrl = origin + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parsePath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parsePath"])(// @ts-ignore - private
                    this.initialBasePath);
                    const { context, getState } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getFrameContext$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getFrameContext"])({
                        context: await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$requestBodyToContext$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["requestBodyToContext"])(c, {
                            hub: this.hub || (this.hubApiUrl ? {
                                apiUrl: this.hubApiUrl
                            } : undefined),
                            secret: this.secret,
                            verify
                        }),
                        initialState: this._initialState,
                        origin
                    });
                    if (context.url !== (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parsePath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parsePath"])(url.href)) return c.redirect(context.url);
                    const response = await handler(context);
                    if (response instanceof Response) return response;
                    if (response.status === 'error') {
                        c.status(response.error.statusCode ?? 400);
                        return c.json({
                            message: response.error.message
                        });
                    }
                    const { action, browserLocation = this.browserLocation, headers = this.headers, imageAspectRatio = this.imageAspectRatio, image, imageOptions: imageOptions_ = this.imageOptions, intents, ogImage, title = this.title } = response.data;
                    const buttonValues = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getButtonValues$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getButtonValues"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parseIntents$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseIntents"])(intents, {
                        baseUrl,
                        initialBaseUrl
                    }));
                    if (context.status === 'redirect' && context.buttonIndex) {
                        const buttonValue = buttonValues[context.buttonIndex - 1];
                        const location = buttonValue?.replace(/^_r:/, '');
                        if (!location) throw new Error('location required to redirect');
                        return c.redirect(location, 302);
                    }
                    const renderAsHTML = c.req.header('Accept') === 'text/html' || c.req.query('accept') === 'text/html';
                    // If the user is coming from a browser, and a `browserLocation` is set,
                    // then we will redirect the user to that location.
                    const browser = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$detect$2d$browser$2f$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["detect"])(c.req.header('user-agent'));
                    const browserLocation_ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parseBrowserLocation$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBrowserLocation"])(c, browserLocation, {
                        basePath: this.basePath,
                        path
                    });
                    if (!renderAsHTML && browser?.name && browserLocation_) return c.redirect(browserLocation_.startsWith('http') ? browserLocation_ : `${origin + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$path$2d$browserify$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].resolve(this.basePath, browserLocation_)}`, 302);
                    // Derive the previous state, and sign it if a secret is provided.
                    const previousState = await (async ()=>{
                        const state = await context.deriveState();
                        if (!this.secret) return state;
                        if (!state) return state;
                        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$jws$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__.sign(JSON.stringify(state), this.secret);
                    })();
                    // We need to pass some context to the next frame to derive button values, state, etc.
                    // Here, we are deriving two sets of "next frame state".
                    // 1. For the INITIAL FRAME, we need to pass through the state as a search parameter
                    //    due to Farcaster's constraints with the `fc:frame:state` tag. It must be empty
                    //    for the initial frame.
                    // 2. For SUBSEQUENT FRAMES, we can pass through the state as a serialized JSON object
                    //    to the next frame via the `fc:frame:state` tag.
                    const nextFrameStateSearch = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$toSearchParams$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["toSearchParams"])({
                        initialPath: context.initialPath,
                        previousButtonValues: buttonValues
                    });
                    const nextFrameStateMeta = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$serializeJson$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["serializeJson"])({
                        initialPath: context.initialPath,
                        previousButtonValues: buttonValues,
                        previousState
                    });
                    const imageOptions = await (async ()=>{
                        if (typeof imageOptions_ === 'function') return await imageOptions_();
                        return imageOptions_;
                    })();
                    const imageUrl = await (async ()=>{
                        if (typeof image !== 'string') {
                            const compressedImage = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lz$2d$string$2f$libs$2f$lz$2d$string$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["default"].compressToEncodedURIComponent(JSON.stringify(await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parseImage$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseImage"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("div", {
                                style: {
                                    display: 'flex',
                                    flexDirection: 'column',
                                    height: '100%',
                                    width: '100%'
                                },
                                children: await image
                            }), {
                                assetsUrl,
                                ui: {
                                    ...this.ui,
                                    vars: {
                                        ...this.ui?.vars,
                                        frame: {
                                            height: imageOptions?.height,
                                            width: imageOptions?.width
                                        }
                                    }
                                }
                            })));
                            const imageParams = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$toSearchParams$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["toSearchParams"])({
                                image: compressedImage,
                                imageOptions,
                                headers
                            });
                            return `${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parsePath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parsePath"])(context.url)}/image?${imageParams}`;
                        }
                        if (image.startsWith('http') || image.startsWith('data')) return image;
                        const isHandlerPresentOnImagePath = (()=>{
                            const routes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$dev$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["inspectRoutes"])(this.hono);
                            const matchesWithoutParamsStash = this.hono.router.match('GET', // `this.initialBasePath` and `this.basePath` are equal only when this handler is triggered at
                            // the top `Frog` instance.
                            //
                            // However, such are not equal when an instance of `Frog` is routed to another one via `.route`,
                            // and since we not expect one to set `basePath` to the instance which is being routed to, we can
                            // safely assume it's only set at the top level, as doing otherwise is irrational.
                            //
                            // Since `this.basePath` is set at the top instance, we have to account for that while looking for a match.
                            //
                            // @ts-ignore - accessing a private field
                            this.initialBasePath === this.basePath ? this.basePath + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parsePath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parsePath"])(image) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parsePath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parsePath"])(image)).filter((routeOrParams)=>typeof routeOrParams[0] !== 'string');
                            const matchedRoutes = matchesWithoutParamsStash.flat(1).map((matchedRouteWithoutParams)=>matchedRouteWithoutParams[0][1]);
                            const nonMiddlewareMatchedRoutes = matchedRoutes.filter((matchedRoute)=>{
                                const routeWithAdditionalInfo = routes.find((route)=>route.path === matchedRoute.path && route.method === matchedRoute.method);
                                if (!routeWithAdditionalInfo) throw new Error('Unexpected error: Matched a route that is not in the list of all routes.');
                                return !routeWithAdditionalInfo.isMiddleware;
                            });
                            return nonMiddlewareMatchedRoutes.length !== 0;
                        })();
                        if (isHandlerPresentOnImagePath) return `${baseUrl + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parsePath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parsePath"])(image)}`;
                        return `${assetsUrl + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parsePath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parsePath"])(image)}`;
                    })();
                    const ogImageUrl = (()=>{
                        if (!ogImage) return undefined;
                        if (ogImage.startsWith('http')) return ogImage;
                        return baseUrl + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parsePath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parsePath"])(ogImage);
                    })();
                    const postUrl = (()=>{
                        if (!action) return context.url;
                        if (action.startsWith('http')) return action;
                        if (action.startsWith('~')) return initialBaseUrl + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parsePath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parsePath"])(action.slice(1));
                        return baseUrl + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parsePath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parsePath"])(action);
                    })();
                    const parsedIntents = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parseIntents$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseIntents"])(intents, {
                        initialBaseUrl,
                        baseUrl,
                        search: context.status === 'initial' ? nextFrameStateSearch.toString() : undefined
                    });
                    // Set response headers provided by consumer.
                    for (const [key, value] of Object.entries(headers ?? {}))c.header(key, value);
                    if (renderAsHTML) {
                        const height = imageOptions?.height ?? 630;
                        const width = imageOptions?.width ?? 1200;
                        // Convert `tw` to `class`
                        const __html = image.toString().replace(/tw=/g, 'class=');
                        const fonts = await (async ()=>{
                            if (this.ui?.vars?.fonts) return Object.values(this.ui.vars.fonts).flat();
                            if (typeof options?.fonts === 'function') return await options.fonts();
                            if (options?.fonts) return options.fonts;
                            return imageOptions?.fonts;
                        })();
                        const groupedFonts = new Map();
                        if (fonts) for (const font of fonts){
                            const key = `${font.source ? `${font.source}:` : ''}${font.name}`;
                            if (groupedFonts.has(key)) groupedFonts.get(key)?.push(font);
                            else groupedFonts.set(key, [
                                font
                            ]);
                        }
                        const googleFonts = [];
                        for (const item of groupedFonts){
                            const [, fonts] = item;
                            const font = fonts[0];
                            if (font?.source === 'google') {
                                const name = font.name.replace(' ', '+');
                                const hasItalic = fonts.some((x)=>x.style === 'italic');
                                const attributeKeys = hasItalic ? 'ital,wght' : 'wght';
                                const attributeValues = fonts.map((x)=>{
                                    if (hasItalic) {
                                        if (x.style === 'italic') return `1,${x.weight}`;
                                        return `0,${x.weight}`;
                                    }
                                    return x.weight;
                                }).join(';');
                                const url = `https://fonts.googleapis.com/css2?family=${name}${attributeValues ? `:${attributeKeys}@${attributeValues}` : ''}&display=swap`;
                                googleFonts.push(url);
                            }
                        }
                        return c.html((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsxs$3e$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$jsx$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Fragment"], {
                            children: [
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("script", {
                                    src: "https://cdn.tailwindcss.com"
                                }),
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("script", {
                                    children: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$html$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["html"]`
                tailwind.config = {
                  plugins: [{
                    handler({ addBase }) {
                      addBase({ 'html': { 'line-height': 1.2 } })
                    },
                  }],
                }
              `
                                }),
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("style", {
                                    // biome-ignore lint/security/noDangerouslySetInnerHtml: <explanation>
                                    dangerouslySetInnerHTML: {
                                        __html: `@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;700&family=Material+Icons');body{display:flex;height:100%;margin:0;tab-size:8;font-family:Inter,sans-serif;overflow:hidden}body>div,body>div *{box-sizing:border-box;display:flex}body{background:#1A1A19;}link,script,style{position: absolute;width: 1px;height: 1px;padding: 0;margin: -1px;overflow: hidden;clip: rect(0, 0, 0, 0);white-space: nowrap;border-width: 0;}`
                                    }
                                }),
                                Boolean(googleFonts.length) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsxs$3e$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$jsx$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Fragment"], {
                                    children: [
                                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("link", {
                                            rel: "preconnect",
                                            href: "https://fonts.googleapis.com"
                                        }),
                                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("link", {
                                            rel: "preconnect",
                                            href: "https://fonts.gstatic.com",
                                            crossOrigin: true
                                        }),
                                        googleFonts.map((url)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("link", {
                                                href: url,
                                                rel: "stylesheet"
                                            }))
                                    ]
                                }),
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("div", {
                                    className: "bg-black",
                                    // biome-ignore lint/security/noDangerouslySetInnerHtml: <explanation>
                                    dangerouslySetInnerHTML: {
                                        __html
                                    },
                                    style: {
                                        height,
                                        width
                                    }
                                })
                            ]
                        }));
                    }
                    const metaTagsMap = new Map();
                    for (const tag of [
                        ...response.data.unstable_metaTags ?? [],
                        ...this.metaTags ?? []
                    ]){
                        if (metaTagsMap.has(tag.property)) continue;
                        metaTagsMap.set(tag.property, tag.content);
                    }
                    const metaTags = metaTagsMap.size === 0 ? [] : Array.from(metaTagsMap).map((x)=>({
                            property: x[0],
                            content: x[1]
                        }));
                    return c.render((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsxs$3e$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$jsx$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Fragment"], {
                        children: [
                            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$html$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["html"]`<!DOCTYPE html>`,
                            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsxs$3e$__["jsxs"])("html", {
                                lang: "en",
                                children: [
                                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsxs$3e$__["jsxs"])("head", {
                                        children: [
                                            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
                                                property: "fc:frame",
                                                content: "vNext"
                                            }),
                                            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
                                                property: "fc:frame:image:aspect_ratio",
                                                content: imageAspectRatio
                                            }),
                                            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
                                                property: "fc:frame:image",
                                                content: imageUrl
                                            }),
                                            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
                                                property: "og:image",
                                                content: ogImageUrl ?? imageUrl
                                            }),
                                            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
                                                property: "og:title",
                                                content: title
                                            }),
                                            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
                                                property: "fc:frame:post_url",
                                                content: context.status === 'initial' ? `${postUrl}?${nextFrameStateSearch.toString()}` : postUrl
                                            }),
                                            context.status !== 'initial' && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
                                                property: "fc:frame:state",
                                                content: nextFrameStateMeta
                                            }),
                                            parsedIntents,
                                            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
                                                property: "frog:version",
                                                content: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$version$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["version"]
                                            }),
                                            c.req.header('x-frog-dev') !== undefined && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
                                                property: "frog:context",
                                                content: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$serializeJson$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["serializeJson"])({
                                                    ...context,
                                                    // note: unserializable entities are undefined.
                                                    env: context.env ? Object.assign(context.env, {
                                                        incoming: undefined,
                                                        outgoing: undefined
                                                    }) : undefined,
                                                    req: undefined,
                                                    state: getState()
                                                })
                                            }),
                                            metaTags.map((tag)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
                                                    property: tag.property,
                                                    content: tag.content
                                                }))
                                        ]
                                    }),
                                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("body", {})
                                ]
                            })
                        ]
                    }));
                });
                return this;
            }
        });
        Object.defineProperty(this, "image", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: (...parameters)=>{
                const [path, middlewares, handler, options = {}] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getRouteParameters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getRouteParameters"])(...parameters);
                if (path.endsWith('/image')) throw new Error('Image handler path cannot end with `/image` as it might conflict with internal frame image handler path that also ends with `/image`.');
                this.hono.get(path, ...middlewares, async (c)=>{
                    const url = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getRequestUrl$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getRequestUrl"])(c.req);
                    const origin = this.origin ?? url.origin;
                    const assetsUrl = origin + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parsePath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parsePath"])(this.assetsPath);
                    const { context } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getImageContext$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getImageContext"])({
                        context: c
                    });
                    const response = await handler(context);
                    if (response.status !== 'success') throw new Error(`Unexepcted Error: Image response must always have value 'success'.`);
                    const defaultImageOptions = await (async ()=>{
                        if (typeof this.imageOptions === 'function') return await this.imageOptions();
                        return this.imageOptions;
                    })();
                    const fonts = await (async ()=>{
                        if (this.ui?.vars?.fonts) return Object.values(this.ui?.vars.fonts).flat();
                        if (typeof options?.fonts === 'function') return await options.fonts();
                        if (options?.fonts) return options.fonts;
                        return defaultImageOptions?.fonts;
                    })();
                    const { headers = this.headers, image, imageOptions = defaultImageOptions } = response.data;
                    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2d$og$2f$lib$2f$response$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["ImageResponse"](await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parseImage$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseImage"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("div", {
                        style: {
                            display: 'flex',
                            flexDirection: 'column',
                            height: '100%',
                            width: '100%'
                        },
                        children: await image
                    }), {
                        assetsUrl,
                        ui: {
                            ...this.ui,
                            vars: {
                                ...this.ui?.vars,
                                frame: {
                                    height: imageOptions?.height,
                                    width: imageOptions?.width
                                }
                            }
                        }
                    }), {
                        width: 1200,
                        height: 630,
                        ...imageOptions,
                        format: imageOptions?.format ?? 'png',
                        fonts: await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parseFonts$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseFonts"])(fonts),
                        headers: imageOptions?.headers ?? headers
                    });
                });
                return this;
            }
        });
        Object.defineProperty(this, "transaction", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: (...parameters)=>{
                const [path, middlewares, handler, options = {}] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getRouteParameters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getRouteParameters"])(...parameters);
                const { verify = this.verify } = options;
                this.hono.post((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parseHonoPath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseHonoPath"])(path), ...middlewares, async (c)=>{
                    const { context } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getTransactionContext$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getTransactionContext"])({
                        context: await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$requestBodyToContext$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["requestBodyToContext"])(c, {
                            hub: this.hub || (this.hubApiUrl ? {
                                apiUrl: this.hubApiUrl
                            } : undefined),
                            secret: this.secret,
                            verify
                        }),
                        req: c.req
                    });
                    const response = await handler(context);
                    if (response instanceof Response) return response;
                    if (response.status === 'error') {
                        c.status(response.error.statusCode ?? 400);
                        return c.json({
                            message: response.error.message
                        });
                    }
                    return c.json(response.data);
                });
                return this;
            }
        });
        Object.defineProperty(this, "signature", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: (...parameters)=>{
                const [path, middlewares, handler, options = {}] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getRouteParameters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getRouteParameters"])(...parameters);
                const { verify = this.verify } = options;
                this.hono.post((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parseHonoPath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseHonoPath"])(path), ...middlewares, async (c)=>{
                    const { context } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getSignatureContext$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getSignatureContext"])({
                        context: await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$requestBodyToContext$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["requestBodyToContext"])(c, {
                            hub: this.hub || (this.hubApiUrl ? {
                                apiUrl: this.hubApiUrl
                            } : undefined),
                            secret: this.secret,
                            verify
                        }),
                        req: c.req
                    });
                    const response = await handler(context);
                    if (response instanceof Response) return response;
                    if (response.status === 'error') {
                        c.status(response.error.statusCode ?? 400);
                        return c.json({
                            message: response.error.message
                        });
                    }
                    return c.text(JSON.stringify(response.data, (_, value)=>typeof value === 'bigint' ? value.toString() : value), 200, {
                        'Content-Type': 'application/json'
                    });
                });
                return this;
            }
        });
        Object.defineProperty(this, "use", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: (...args)=>{
                this.hono.use(...args);
                return this;
            }
        });
        const { assetsPath, basePath, browserLocation, dev, headers, honoOptions, hubApiUrl, hub, imageAspectRatio, imageOptions, initialState, origin, secret, title, ui, unstable_metaTags, verify } = parameters;
        this.hono = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$hono$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Hono"](honoOptions);
        if (basePath) this.hono = this.hono.basePath(basePath);
        if (browserLocation) this.browserLocation = browserLocation;
        if (headers) this.headers = headers;
        if (hubApiUrl) this.hubApiUrl = hubApiUrl;
        if (hub) this.hub = hub;
        if (imageAspectRatio) this.imageAspectRatio = imageAspectRatio;
        if (imageOptions) this.imageOptions = imageOptions;
        if (unstable_metaTags) this.metaTags = unstable_metaTags;
        if (origin) this.origin = origin;
        if (secret) this.secret = secret;
        this.title = title;
        if (ui) this.ui = ui;
        if (typeof verify !== 'undefined') this.verify = verify;
        this.basePath = basePath ?? '/';
        // @ts-ignore - private
        this.initialBasePath = this.basePath;
        this.assetsPath = assetsPath ?? this.basePath;
        this.fetch = this.hono.fetch.bind(this.hono);
        this.get = this.hono.get.bind(this.hono);
        this.post = this.hono.post.bind(this.hono);
        if (initialState) this._initialState = initialState;
        if (dev) this.dev = {
            enabled: true,
            ...dev ?? {}
        };
        this._dev = undefined; // this is set `true` by `devtools` helper
        // allow devtools to work with dynamic params off base path
        this.hono.all('*', async (c, next)=>{
            if (this._dev) {
                for (const { handler, path } of c.req.matchedRoutes)if (path === this._dev) return handler(c, next);
            }
            await next();
        });
    }
    route(path, frog) {
        if (frog.assetsPath === '/') frog.assetsPath = this.assetsPath;
        if (frog.basePath === '/') {
            // @ts-ignore - private
            frog.initialBasePath = this.initialBasePath ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parsePath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parsePath"])(this.basePath);
            frog.basePath = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parsePath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parsePath"])(this.basePath) + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$parsePath$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parsePath"])(path);
        }
        if (!frog.browserLocation) frog.browserLocation = this.browserLocation;
        if (!frog.dev) frog.dev = this.dev;
        if (!frog.headers) frog.headers = this.headers;
        if (!frog.hubApiUrl) frog.hubApiUrl = this.hubApiUrl;
        if (!frog.hub) frog.hub = this.hub;
        if (!frog.imageOptions) frog.imageOptions = this.imageOptions;
        if (!frog.origin) frog.origin = this.origin;
        if (!frog.secret) frog.secret = this.secret;
        if (!frog.ui) frog.ui = this.ui;
        if (!frog.verify) frog.verify = this.verify;
        this.hono.route(path, frog.hono);
        return this;
    }
} //# sourceMappingURL=frog-base.js.map
__turbopack_async_result__();
} catch(e) { __turbopack_async_result__(e); } }, false);
})()),
"[project]/node_modules/frog/_lib/frog.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, a: __turbopack_async_module__, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_async_module__(async (__turbopack_handle_async_dependencies__, __turbopack_async_result__) => { try {
__turbopack_esm__({
    "Frog": ()=>Frog
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$frog$2d$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/frog-base.js [app-route] (ecmascript)");
var __turbopack_async_dependencies__ = __turbopack_handle_async_dependencies__([
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$frog$2d$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__
]);
[__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$frog$2d$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__] = __turbopack_async_dependencies__.then ? (await __turbopack_async_dependencies__)() : __turbopack_async_dependencies__;
"__TURBOPACK__ecmascript__hoisting__location__";
;
class Frog extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$frog$2d$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["FrogBase"] {
    constructor(params){
        super(params);
        const frame = this.frame;
        this.frame = (path, ...args)=>{
            ;
            frame(path, ...args);
            return this;
        };
    }
} //# sourceMappingURL=frog.js.map
__turbopack_async_result__();
} catch(e) { __turbopack_async_result__(e); } }, false);
})()),
"[project]/node_modules/frog/_lib/vercel/handle.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "handle": ()=>handle
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$adapter$2f$vercel$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/hono/dist/adapter/vercel/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$adapter$2f$vercel$2f$handler$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/adapter/vercel/handler.js [app-route] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
function handle(app) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$adapter$2f$vercel$2f$handler$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["handle"])(app.hono).bind(app.hono);
} //# sourceMappingURL=handle.js.map

})()),
"[project]/node_modules/frog/_lib/dev/constants.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "defaultCastId": ()=>defaultCastId,
    "defaultCookieOptions": ()=>defaultCookieOptions,
    "defaultFid": ()=>defaultFid,
    "defaultHeaders": ()=>defaultHeaders,
    "uiDistDir": ()=>uiDistDir
});
const defaultHeaders = {
    'x-frog-dev': 'true'
};
const defaultFid = 1;
const defaultCastId = {
    fid: defaultFid,
    hash: '0x0000000000000000000000000000000000000000'
};
const defaultCookieOptions = {
    maxAge: 30 * 86400,
    sameSite: 'Strict',
    secure: true
};
const uiDistDir = '.frog'; //# sourceMappingURL=constants.js.map

})()),
"[project]/node_modules/frog/_lib/dev/schemas.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "postSchema": ()=>postSchema
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/valibot/dist/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/dev/constants.js [app-route] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
;
const postSchema = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["object"])({
    buttonIndex: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["number"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["integer"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["minValue"])(1), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["maxValue"])(4)),
    castId: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["optional"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["object"])({
        fid: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["number"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["integer"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["minValue"])(1)),
        hash: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["string"])()
    }), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["defaultCastId"]),
    fid: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["pipe"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["number"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["integer"])(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["minValue"])(1)),
    fromAddress: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["union"])([
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["undefined_"])(),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["string"])()
    ]),
    inputText: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["union"])([
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["undefined_"])(),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["string"])()
    ]),
    state: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["union"])([
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["undefined_"])(),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["string"])()
    ]),
    transactionId: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["union"])([
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["undefined_"])(),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["string"])()
    ]),
    sourceFrameId: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["string"])()
}); //# sourceMappingURL=schemas.js.map

})()),
"[project]/node_modules/frog/_lib/dev/utils/fetchFrame.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "fetchFrame": ()=>fetchFrame
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$abstract$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@noble/curves/esm/abstract/utils.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$ed25519$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@noble/curves/esm/ed25519.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$blake3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@noble/hashes/esm/blake3.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@noble/hashes/esm/utils.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$protobufs$2f$generated$2f$message_pb$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/protobufs/generated/message_pb.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/dev/constants.js [app-route] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
;
;
;
;
;
async function fetchFrame(parameters) {
    const { body, headers, privateKey, url } = parameters;
    const { buttonIndex, castId, fid, fromAddress, state, transactionId } = body;
    const inputText = body.inputText ? body.inputText : undefined;
    const network = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$protobufs$2f$generated$2f$message_pb$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["FarcasterNetwork"].MAINNET;
    const epoch = 1609459200000; // January 1, 2021 UTC
    const timestamp = Math.round((Date.now() - epoch) / 1000);
    // TODO: Add additional validation
    // https://github.com/farcasterxyz/hub-monorepo/blob/main/packages/core/src/validations.ts#L777
    if (timestamp > 2 ** 32 - 1) throw new Error('time too far in future');
    if (typeof fid !== 'number' || fid <= 0 || !Number.isInteger(fid)) throw new Error('Invalid fid');
    if (!Object.values(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$protobufs$2f$generated$2f$message_pb$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["FarcasterNetwork"]).includes(network)) throw new Error('Invalid network');
    const frameActionBody = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$protobufs$2f$generated$2f$message_pb$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["FrameActionBody"]({
        address: fromAddress ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$abstract$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["hexToBytes"])(fromAddress.slice(2)) : undefined,
        buttonIndex,
        castId: {
            fid: BigInt(castId.fid),
            hash: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$abstract$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["hexToBytes"])(castId.hash.slice(2))
        },
        inputText: inputText ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["toBytes"])(inputText) : undefined,
        state: state ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["toBytes"])(state) : undefined,
        url: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["toBytes"])(url),
        transactionId: transactionId ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$abstract$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["hexToBytes"])(transactionId.slice(2)) : undefined
    });
    const messageData = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$protobufs$2f$generated$2f$message_pb$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["MessageData"]({
        body: {
            case: 'frameActionBody',
            value: frameActionBody
        },
        fid: BigInt(fid),
        network,
        timestamp,
        type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$protobufs$2f$generated$2f$message_pb$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["MessageType"].FRAME_ACTION
    });
    const dataBytes = messageData.toBinary();
    const hash = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$blake3$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["blake3"])(dataBytes, {
        dkLen: 20
    });
    const privateKeyBytes = privateKey ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$abstract$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["hexToBytes"])(privateKey.slice(2)) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$ed25519$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["ed25519"].utils.randomPrivateKey();
    const message = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$protobufs$2f$generated$2f$message_pb$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Message"]({
        data: messageData,
        hash,
        hashScheme: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$protobufs$2f$generated$2f$message_pb$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["HashScheme"].BLAKE3,
        signature: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$ed25519$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["ed25519"].sign(hash, privateKeyBytes),
        signatureScheme: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$protobufs$2f$generated$2f$message_pb$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["SignatureScheme"].ED25519,
        signer: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$ed25519$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["ed25519"].getPublicKey(privateKeyBytes)
    });
    const messageBytes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$abstract$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bytesToHex"])(message.toBinary());
    const t0 = performance.now();
    let response;
    let error;
    try {
        response = await fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["defaultHeaders"],
                ...headers
            },
            body: JSON.stringify({
                untrustedData: {
                    address: fromAddress,
                    buttonIndex,
                    castId,
                    fid,
                    inputText,
                    state,
                    transactionId,
                    messageHash: `0x${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$abstract$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bytesToHex"])(message.hash)}`,
                    network,
                    timestamp: message.data?.timestamp,
                    url
                },
                trustedData: {
                    messageBytes
                }
            })
        });
    } catch (err) {
        error = err;
    }
    const t1 = performance.now();
    const speed = t1 - t0;
    return {
        error,
        response,
        speed
    };
} //# sourceMappingURL=fetchFrame.js.map

})()),
"[project]/node_modules/frog/_lib/dev/utils/getHtmlSize.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "getHtmlSize": ()=>getHtmlSize
});
async function getHtmlSize(response) {
    const blob = await response.blob();
    return blob.size;
} //# sourceMappingURL=getHtmlSize.js.map

})()),
"[project]/node_modules/frog/_lib/dev/utils/getImageSize.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "getImageSize": ()=>getImageSize
});
async function getImageSize(url) {
    const response = await fetch(url);
    const blob = await response.blob();
    return blob.size;
} //# sourceMappingURL=getImageSize.js.map

})()),
"[project]/node_modules/frog/_lib/utils/getFrameMetadata.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "getFrameMetadata": ()=>getFrameMetadata,
    "metaTagPropertyRegex": ()=>metaTagPropertyRegex
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$dom$2d$parser$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/dom-parser/dist/index.js [app-route] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
const metaTagPropertyRegex = /^(fc|frog|og:image|og:title)/;
async function getFrameMetadata(url) {
    try {
        const text = await fetch(url).then((r)=>r.text());
        const dom = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$dom$2d$parser$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseFromString"])(text.replace(/<!doctype html>/i, ''));
        const nodes = dom.getElementsByTagName('meta');
        const metaTags = [];
        for (const node of nodes){
            const property = node.getAttribute('property');
            const content = node.getAttribute('content');
            if (!property.match(metaTagPropertyRegex)) continue;
            metaTags.push({
                property: property,
                content
            });
        }
        return metaTags;
    } catch (error) {
        throw new Error([
            `Failed to extract frame meta tags from "${url}".`,
            '',
            `Error: ${error}`
        ].join('\n'));
    }
} //# sourceMappingURL=getFrameMetadata.js.map

})()),
"[project]/node_modules/frog/_lib/dev/utils/parseButtons.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

// https://regexr.com/7rlm0
__turbopack_esm__({
    "parseButtons": ()=>parseButtons
});
const buttonRegex = /fc:frame:button:(1|2|3|4)(?::(action|post_url|target))?$/;
function parseButtons(metadata) {
    let currentButtonIndex = 0;
    let buttonsAreMissing = false;
    let buttonsAreOutOfOrder = false;
    const buttonMap = new Map();
    const buttonActionMap = new Map();
    const buttonPostUrlMap = new Map();
    const buttonTargetMap = new Map();
    const invalidButtons = [];
    for (const meta of metadata){
        const { property } = meta;
        if (!buttonRegex.test(property)) continue;
        const matchArray = property.match(buttonRegex);
        const index = Number.parseInt(matchArray[1], 10);
        const type = matchArray[2];
        const content = meta.content ?? '';
        if (type === 'action') buttonActionMap.set(index, content);
        else if (type === 'post_url') buttonPostUrlMap.set(index, content);
        else if (type === 'target') buttonTargetMap.set(index, content);
        else {
            if (currentButtonIndex >= index) buttonsAreOutOfOrder = true;
            if (currentButtonIndex + 1 === index) currentButtonIndex = index;
            else buttonsAreMissing = true;
            if (buttonsAreOutOfOrder || buttonsAreMissing) invalidButtons.push(index);
            const title = content ?? index;
            buttonMap.set(index, {
                index,
                title
            });
        }
    }
    const buttons = [];
    for (const [index, button] of buttonMap){
        const postUrl = buttonPostUrlMap.get(index);
        const type = buttonActionMap.get(index) ?? 'post';
        const target = buttonTargetMap.get(index);
        buttons.push({
            ...button,
            postUrl,
            target,
            type
        });
    }
    // Using `sort` over `toSorted` for Node.js < 20 compatibility (ie. Vercel default).
    buttons.sort((a, b)=>a.index - b.index);
    return buttons;
} //# sourceMappingURL=parseButtons.js.map

})()),
"[project]/node_modules/frog/_lib/dev/utils/htmlToMetadata.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "htmlToMetadata": ()=>htmlToMetadata
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$dom$2d$parser$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/dom-parser/dist/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$deserializeJson$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/deserializeJson.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getFrameMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/getFrameMetadata.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$parseButtons$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/dev/utils/parseButtons.js [app-route] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
;
;
;
function htmlToMetadata(html) {
    const dom = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$dom$2d$parser$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseFromString"])(html.replace(/<!doctype html>/i, '')// @TODO: consider using `lodash.unescape`
    .replaceAll(/&amp;/gm, '&').replaceAll(/&lt;/gm, '<').replaceAll(/&gt;/gm, '>').replaceAll(/&quot;/gm, '"').replaceAll(/&#39;/gm, "'").replaceAll(/&#96;/gm, '`'));
    const nodes = dom.getElementsByTagName('meta');
    const metadata = [];
    const htmlTags = [];
    const properties = {};
    for (const node of nodes){
        const property = node.getAttribute('property') ?? node.getAttribute('name');
        const content = node.getAttribute('content');
        if (!property) continue;
        if (!property.match(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getFrameMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["metaTagPropertyRegex"])) continue;
        metadata.push({
            property,
            content
        });
        properties[property] = content;
        // filter these properties out and add back on the client to save url space
        // tip: search for `_frog_${property}` to see where it's added back
        const excludeProperties = [
            'fc:frame:image',
            'fc:frame:post_url',
            'fc:frame:state',
            'og:image'
        ];
        let text = node.outerHTML;
        if (excludeProperties.includes(property ?? '')) text = text.replace(/content=".*?"/, `content="_frog_${property}"`);
        htmlTags.push(text);
    }
    const buttons = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$parseButtons$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseButtons"])(metadata);
    return {
        context: properties['frog:context'] ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$deserializeJson$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["deserializeJson"])(properties['frog:context']) : undefined,
        frame: {
            buttons,
            image: properties['og:image'],
            imageAspectRatio: properties['fc:frame:image:aspect_ratio'] ?? '1.91:1',
            imageUrl: properties['fc:frame:image'],
            input: properties['fc:frame:input:text'] ? {
                text: properties['fc:frame:input:text']
            } : undefined,
            postUrl: properties['fc:frame:post_url'],
            state: properties['fc:frame:state'],
            title: properties['og:title'],
            version: properties['fc:frame'] ?? 'vNext',
            debug: {
                htmlTags
            }
        },
        properties: metadata
    };
} //# sourceMappingURL=htmlToMetadata.js.map

})()),
"[project]/node_modules/frog/_lib/dev/utils/responseToBaseErrorMessage.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "responseToBaseErrorMessage": ()=>responseToBaseErrorMessage
});
async function responseToBaseErrorMessage(response) {
    const { message } = await response.json();
    return message;
} //# sourceMappingURL=responseToBaseErrorMessage.js.map

})()),
"[project]/node_modules/frog/_lib/dev/utils/uid.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "uid": ()=>uid
});
const size = 256;
let index = size;
let buffer;
function uid(length = 11) {
    if (!buffer || index + length > size * 2) {
        buffer = '';
        index = 0;
        for(let i = 0; i < size; i++){
            buffer += (256 + Math.random() * 256 | 0).toString(16).substring(1);
        }
    }
    return buffer.substring(index, index++ + length);
} //# sourceMappingURL=uid.js.map

})()),
"[project]/node_modules/frog/_lib/dev/utils/warpcast.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "getSignedKeyRequest": ()=>getSignedKeyRequest,
    "getSignedKeyRequestForToken": ()=>getSignedKeyRequestForToken,
    "getUserDataByFid": ()=>getUserDataByFid,
    "postSignedKeyRequest": ()=>postSignedKeyRequest
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$accounts$2f$mnemonicToAccount$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/viem/_esm/accounts/mnemonicToAccount.js [app-route] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
async function getSignedKeyRequest(data) {
    const { appFid, appMnemonic, publicKey } = data;
    if (appFid && appMnemonic) {
        const account = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$viem$2f$_esm$2f$accounts$2f$mnemonicToAccount$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["mnemonicToAccount"])(appMnemonic);
        const deadline = Math.floor(Date.now() / 1000) + 60 * 60; // now + hour
        const requestFid = appFid;
        const signature = await account.signTypedData({
            domain: {
                name: 'Farcaster SignedKeyRequestValidator',
                version: '1',
                chainId: 10,
                verifyingContract: '0x00000000FC700472606ED4fA22623Acf62c60553'
            },
            types: {
                SignedKeyRequest: [
                    {
                        name: 'requestFid',
                        type: 'uint256'
                    },
                    {
                        name: 'key',
                        type: 'bytes'
                    },
                    {
                        name: 'deadline',
                        type: 'uint256'
                    }
                ]
            },
            primaryType: 'SignedKeyRequest',
            message: {
                requestFid: BigInt(appFid),
                key: publicKey,
                deadline: BigInt(deadline)
            }
        });
        return {
            deadline,
            requestFid,
            signature
        };
    }
    return await fetch(`https://auth.frog.fm/api/signed-key-requests/${publicKey}`, {
        method: 'GET',
        headers: {
            'Content-Type': 'application/json'
        }
    }).then((response)=>response.json());
}
async function postSignedKeyRequest(body) {
    return await fetch('https://api.warpcast.com/v2/signed-key-requests', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            ...body,
            key: body.publicKey
        })
    }).then((response)=>response.json());
}
async function getSignedKeyRequestForToken(token) {
    return await fetch(`https://api.warpcast.com/v2/signed-key-request?token=${token}`, {
        method: 'GET',
        headers: {
            'Content-Type': 'application/json'
        }
    }).then((response)=>response.json());
}
async function getUserDataByFid(hub, userFid) {
    const response = await fetch(`${hub.apiUrl}/v1/userDataByFid?fid=${userFid}`, {
        ...hub.fetchOptions,
        method: 'GET',
        headers: {
            'Content-Type': 'application/json',
            ...hub.fetchOptions?.headers
        }
    }).then((response)=>response.json());
    let displayName = undefined;
    let pfp = undefined;
    let username = undefined;
    for (const message of response.messages){
        if (message.data.type !== 'MESSAGE_TYPE_USER_DATA_ADD') continue;
        const type = message.data.userDataBody.type;
        const value = message.data.userDataBody.value;
        if (type === 'USER_DATA_TYPE_PFP') pfp = value;
        if (type === 'USER_DATA_TYPE_USERNAME') username = value;
        if (type === 'USER_DATA_TYPE_DISPLAY') displayName = value;
    }
    return {
        displayName,
        pfp,
        userFid,
        username
    };
} //# sourceMappingURL=warpcast.js.map

})()),
"[project]/node_modules/frog/_lib/dev/api.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "apiRoutes": ()=>apiRoutes,
    "getFrameUrls": ()=>getFrameUrls,
    "getInitialData": ()=>getInitialData
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$hono$2f$valibot$2d$validator$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@hono/valibot-validator/dist/esm/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$abstract$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@noble/curves/esm/abstract/utils.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$ed25519$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@noble/curves/esm/ed25519.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/hono/dist/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$hono$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/hono.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$cookie$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/helper/cookie/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$http$2d$exception$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/http-exception.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/valibot/dist/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/dev/constants.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$schemas$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/dev/schemas.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$fetchFrame$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/dev/utils/fetchFrame.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$getHtmlSize$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/dev/utils/getHtmlSize.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$getImageSize$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/dev/utils/getImageSize.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$htmlToMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/dev/utils/htmlToMetadata.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$responseToBaseErrorMessage$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/dev/utils/responseToBaseErrorMessage.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$uid$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/dev/utils/uid.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$warpcast$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/dev/utils/warpcast.js [app-route] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
function apiRoutes(options) {
    const { appFid, appMnemonic, hub, routes, secret } = options;
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$hono$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Hono"]().use('*', async (c, next)=>{
        try {
            const userCookie = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$cookie$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getCookie"])(c, 'frog_user') ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$cookie$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getCookie"])(c, 'user');
            const fid = userCookie ? JSON.parse(userCookie).userFid : undefined;
            c.set('fid', fid);
        } catch  {}
        try {
            const sessionCookie = secret ? await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$cookie$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getSignedCookie"])(c, secret, 'frog_session') ?? await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$cookie$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getSignedCookie"])(c, secret, 'session') : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$cookie$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getCookie"])(c, 'frog_session') ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$cookie$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getCookie"])(c, 'session');
            const keypair = sessionCookie ? JSON.parse(sessionCookie) : undefined;
            c.set('keypair', keypair);
        } catch  {}
        await next();
    }).get('/frames', (c)=>{
        const url = new URL(c.req.url);
        const frameUrls = getFrameUrls(url.origin, routes);
        return c.json(frameUrls);
    }).get('/frames/:url', async (c)=>{
        const url = decodeURIComponent(c.req.param('url'));
        const initialData = await getInitialData(url);
        return c.json(initialData);
    }).post('/frames/:url/action', (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$hono$2f$valibot$2d$validator$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["vValidator"])('json', __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$schemas$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["postSchema"]), async (c)=>{
        const url = decodeURIComponent(c.req.param('url'));
        const json = c.req.valid('json');
        const fid = json.fid ?? c.var.fid ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["defaultFid"];
        const body = {
            ...json,
            fid
        };
        const { response, speed } = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$fetchFrame$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["fetchFrame"])({
            body,
            privateKey: c.var.keypair?.privateKey,
            url
        });
        if (!response) throw new Error('Failed to fetch frame');
        const cloned = response.clone();
        if (!response.ok) {
            const message = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$responseToBaseErrorMessage$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["responseToBaseErrorMessage"])(cloned);
            return c.json({
                id: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$uid$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["uid"])(),
                timestamp: Date.now(),
                type: 'error',
                method: 'post',
                body,
                metrics: {
                    speed
                },
                response: {
                    success: false,
                    error: message,
                    status: response.status,
                    statusText: response.statusText
                },
                url
            });
        }
        const text = await response.text();
        const metadata = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$htmlToMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["htmlToMetadata"])(text);
        const { context, frame } = metadata;
        const sizes = await Promise.all([
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$getHtmlSize$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getHtmlSize"])(cloned),
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$getImageSize$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getImageSize"])(frame.imageUrl)
        ]);
        return c.json({
            id: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$uid$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["uid"])(),
            timestamp: Date.now(),
            type: 'action',
            method: 'post',
            body,
            context,
            frame,
            metrics: {
                htmlSize: sizes[0],
                imageSize: sizes[1],
                speed: speed
            },
            response: {
                success: true,
                error: undefined,
                status: response.status,
                statusText: response.statusText
            },
            url
        });
    }).post('/frames/:url/redirect', (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$hono$2f$valibot$2d$validator$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["vValidator"])('json', __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$schemas$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["postSchema"]), async (c)=>{
        const url = decodeURIComponent(c.req.param('url'));
        const json = c.req.valid('json');
        const fid = json.fid ?? c.var.fid ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["defaultFid"];
        const body = {
            ...json,
            fid
        };
        const { error, response, speed } = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$fetchFrame$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["fetchFrame"])({
            body,
            privateKey: c.var.keypair?.privateKey,
            url
        });
        return c.json({
            id: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$uid$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["uid"])(),
            timestamp: Date.now(),
            type: 'redirect',
            method: 'post',
            body,
            metrics: {
                speed
            },
            response: response?.redirected ? {
                success: true,
                location: response.url,
                error: undefined,
                status: 302,
                statusText: 'Found'
            } : {
                success: false,
                error: error?.cause ? `${error.cause}`.replace('Error: ', '') : error?.message,
                status: response?.status ?? 500,
                statusText: response?.statusText ?? 'Internal Server Error'
            },
            sourceFrameId: json.sourceFrameId,
            url
        });
    }).post('/frames/:url/tx', (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$hono$2f$valibot$2d$validator$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["vValidator"])('json', __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$schemas$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["postSchema"]), async (c)=>{
        const url = decodeURIComponent(c.req.param('url'));
        const json = c.req.valid('json');
        const fid = json.fid ?? c.var.fid ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["defaultFid"];
        const body = {
            ...json,
            fid
        };
        const { response, speed } = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$fetchFrame$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["fetchFrame"])({
            body,
            privateKey: c.var.keypair?.privateKey,
            url
        });
        // TODO: Handle errors
        if (!response) throw new Error('Failed to fetch frame');
        const cloned = response.clone();
        if (!response.ok) {
            const message = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$responseToBaseErrorMessage$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["responseToBaseErrorMessage"])(cloned);
            return c.json({
                id: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$uid$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["uid"])(),
                timestamp: Date.now(),
                type: 'error',
                method: 'post',
                body,
                metrics: {
                    speed
                },
                response: {
                    success: false,
                    error: message,
                    status: response.status,
                    statusText: response.statusText
                },
                url
            });
        }
        const data = await response.json();
        return c.json({
            id: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$uid$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["uid"])(),
            timestamp: Date.now(),
            type: 'tx',
            method: 'post',
            body,
            metrics: {
                speed
            },
            response: {
                success: true,
                data,
                error: undefined,
                status: response.status,
                statusText: response.statusText
            },
            sourceFrameId: json.sourceFrameId,
            url
        });
    }).get('/auth/code', async (c)=>{
        // 1. Create keypair
        const privateKeyBytes = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$ed25519$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["ed25519"].utils.randomPrivateKey();
        const publicKeyBytes = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$ed25519$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["ed25519"].getPublicKey(privateKeyBytes);
        const privateKey = `0x${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$abstract$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bytesToHex"])(privateKeyBytes)}`;
        const publicKey = `0x${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$noble$2f$curves$2f$esm$2f$abstract$2f$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bytesToHex"])(publicKeyBytes)}`;
        // 2. Sign key request. By default, use hosted service.
        const { deadline, requestFid, signature } = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$warpcast$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getSignedKeyRequest"])({
            appFid,
            appMnemonic,
            publicKey
        });
        // 3. Create key request to register public key
        const response = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$warpcast$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["postSignedKeyRequest"])({
            deadline,
            publicKey,
            requestFid,
            signature
        });
        const { token, deeplinkUrl: url } = response.result.signedKeyRequest;
        // 4. Save keypair in cookie
        const value = JSON.stringify({
            privateKey,
            publicKey
        });
        if (secret) await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$cookie$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["setSignedCookie"])(c, 'frog_session', value, secret, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["defaultCookieOptions"]);
        else (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$cookie$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["setCookie"])(c, 'frog_session', value, {
            ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["defaultCookieOptions"],
            httpOnly: true
        });
        return c.json({
            token,
            url
        });
    }).get('/auth/status/:token', async (c)=>{
        const token = c.req.param('token');
        const response = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$warpcast$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getSignedKeyRequestForToken"])(token);
        const { state = 'pending', userFid } = response.result?.signedKeyRequest ?? {};
        if (state === 'completed') {
            let user = {
                state,
                token,
                userFid: userFid
            };
            if (hub && userFid) {
                const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$warpcast$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getUserDataByFid"])(hub, userFid);
                user = {
                    ...user,
                    ...data
                };
            }
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$cookie$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["setCookie"])(c, 'frog_user', JSON.stringify({
                token,
                userFid
            }), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["defaultCookieOptions"]);
            return c.json(user);
        }
        return c.json({
            state
        });
    }).post('/auth/logout', async (c)=>{
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$cookie$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["deleteCookie"])(c, 'frog_session');
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$cookie$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["deleteCookie"])(c, 'frog_user');
        return c.json({
            success: true
        });
    }).post('/debug/image/:url', (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$hono$2f$valibot$2d$validator$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["vValidator"])('json', (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["union"])([
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["object"])({}),
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$schemas$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["postSchema"]
    ])), async (c)=>{
        const url = decodeURIComponent(c.req.param('url'));
        let text;
        const body = await c.req.json();
        const hasBody = Object.keys(body).length > 0;
        const headers = {
            ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["defaultHeaders"],
            Accept: 'text/html'
        };
        if (hasBody) {
            const json = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$valibot$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parse"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$schemas$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["postSchema"], body);
            const params = {
                body: {
                    ...json,
                    fid: json.fid ?? c.var.fid ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["defaultFid"]
                },
                headers,
                privateKey: c.var.keypair?.privateKey,
                url
            };
            text = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$fetchFrame$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["fetchFrame"])(params).then((result)=>result.response).then((response)=>response?.text());
        } else text = await fetch(url, {
            headers
        }).then((response)=>response.text());
        if (!text) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$http$2d$exception$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["HTTPException"](500, {
            message: 'Failed to fetch'
        });
        return c.html(text);
    });
}
function getFrameUrls(origin, routes) {
    const frameUrls = [];
    for (const route of routes){
        if (route.isMiddleware) continue;
        if (route.method !== 'ALL') continue;
        frameUrls.push(`${origin}${route.path}`);
    }
    return frameUrls;
}
async function getInitialData(frameUrl) {
    const t0 = performance.now();
    const response = await fetch(frameUrl, {
        headers: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["defaultHeaders"]
    });
    const t1 = performance.now();
    const speed = t1 - t0;
    const cloned = response.clone();
    const text = await response.text();
    // Vercel requires authentication by default for preview deployments
    if (text.includes('Authentication Required') && text.includes('vercel')) throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$http$2d$exception$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["HTTPException"](401, {
        message: 'Vercel Authentication blocked Frog Devtools\nLearn more: https://vercel.com/docs/security/deployment-protection'
    });
    const metadata = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$htmlToMetadata$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["htmlToMetadata"])(text);
    const { context, frame } = metadata;
    const sizes = await Promise.all([
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$getHtmlSize$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getHtmlSize"])(cloned),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$getImageSize$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getImageSize"])(frame.imageUrl)
    ]);
    return {
        id: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$uid$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["uid"])(),
        timestamp: Date.now(),
        type: 'initial',
        method: 'get',
        context,
        frame,
        metrics: {
            htmlSize: sizes[0],
            imageSize: sizes[1],
            speed
        },
        response: {
            success: true,
            error: undefined,
            status: response.status,
            statusText: response.statusText
        },
        url: frameUrl
    };
} //# sourceMappingURL=api.js.map

})()),
"[project]/node_modules/frog/_lib/dev/devtools.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "devtools": ()=>devtools,
    "routes": ()=>routes
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__ = __turbopack_import__("[project]/node_modules/frog/_lib/jsx/jsx-dev-runtime/index.js [app-route] (ecmascript) <export jsxDEV as jsx>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsxs$3e$__ = __turbopack_import__("[project]/node_modules/frog/_lib/jsx/jsx-dev-runtime/index.js [app-route] (ecmascript) <export jsxDEV as jsxs>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$jsx$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/jsx/base.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/hono/dist/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$hono$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/hono.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$cookie$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/helper/cookie/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$dev$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/helper/dev/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$html$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/hono/dist/helper/html/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$html$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/hono/dist/helper/html/index.js [app-route] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$http$2d$exception$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/http-exception.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getRequestUrl$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/utils/getRequestUrl.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$api$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/dev/api.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/dev/constants.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$warpcast$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/dev/utils/warpcast.js [app-route] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
;
;
;
;
;
;
;
;
;
function devtools(frog, options) {
    if (!(frog.dev?.enabled ?? true)) return;
    const { appFid = frog.dev?.appFid, appMnemonic = frog.dev?.appMnemonic, assetsPath, basePath = '/dev', root, serveStatic, serveStaticOptions } = options ?? {};
    let publicPath = '';
    if (assetsPath) publicPath = assetsPath === '/' ? '' : assetsPath;
    else if (serveStatic) publicPath = `.${basePath}`;
    else if (frog.assetsPath) publicPath = frog.assetsPath === '/' ? '' : frog.assetsPath;
    else publicPath = `/${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["uiDistDir"]}`;
    const rootBasePath = frog.basePath === '/' ? '' : frog.basePath;
    const devBasePath = `${rootBasePath}${basePath}`;
    const app = routes({
        appFid,
        appMnemonic,
        basePath: devBasePath,
        hub: frog.hub || (frog.hubApiUrl ? {
            apiUrl: frog.hubApiUrl
        } : undefined),
        publicPath,
        root,
        routes: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$dev$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["inspectRoutes"])(frog.hono),
        secret: frog.secret,
        serveStatic,
        serveStaticOptions
    });
    frog.hono.route(basePath, app);
    frog._dev = devBasePath;
}
function routes(options) {
    const { appFid, appMnemonic, basePath, hub, publicPath, root, routes, secret, serveStatic, serveStaticOptions } = options;
    const app = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$hono$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Hono"]();
    const assetsPath = publicPath.endsWith('/') ? publicPath.replace(/\/$/, '') : publicPath;
    app.get('/', async (c)=>{
        const { origin } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$utils$2f$getRequestUrl$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getRequestUrl"])(c.req);
        const baseUrl = `${origin}${basePath}`;
        let frameUrls = [];
        let initialData = undefined;
        const url = c.req.query('url');
        if (url || routes.length) {
            frameUrls = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$api$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getFrameUrls"])(origin, routes);
            let frameUrl = frameUrls[0];
            if (url) {
                const tmpUrl = `${origin}${url}`;
                if (url.startsWith('/')) frameUrl = tmpUrl;
                else frameUrl = url;
            }
            try {
                if (frameUrl) initialData = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$api$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getInitialData"])(frameUrl);
            } catch (error) {
                if (error instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$http$2d$exception$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["HTTPException"]) throw error;
            }
        }
        let user = undefined;
        const cookie = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$cookie$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getCookie"])(c, 'frog_user') ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$cookie$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getCookie"])(c, 'user');
        if (cookie) try {
            const parsed = JSON.parse(cookie);
            if (parsed && hub) {
                const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$warpcast$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getUserDataByFid"])(hub, parsed.userFid);
                user = {
                    state: 'completed',
                    ...parsed,
                    ...data
                };
            }
        } catch  {}
        const bootstrap = JSON.stringify({
            data: initialData,
            frameUrls,
            user
        });
        const title = initialData ? `frame: ${new URL(initialData.url).pathname}` : 'Frog Devtools';
        return c.html((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsxs$3e$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$jsx$2f$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Fragment"], {
            children: [
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$html$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["html"]`<!doctype html>`,
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsxs$3e$__["jsxs"])("html", {
                    lang: "en",
                    children: [
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsxs$3e$__["jsxs"])("head", {
                            children: [
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
                                    charset: "UTF-8"
                                }),
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("meta", {
                                    name: "viewport",
                                    content: "width=device-width, initial-scale=1.0"
                                }),
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("title", {
                                    children: title
                                }),
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("script", {
                                    type: "module",
                                    children: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$html$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["html"]`globalThis.__FROG_BASE_URL__ = '${baseUrl}'`
                                }),
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("script", {
                                    type: "module",
                                    crossorigin: "",
                                    src: `${assetsPath}/main.js`
                                }),
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("link", {
                                    rel: "stylesheet",
                                    crossorigin: "",
                                    href: `${assetsPath}/assets/main.css`
                                }),
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("link", {
                                    rel: "alternate icon",
                                    type: "image/png",
                                    href: `${assetsPath}/assets/icon.png`
                                }),
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("style", {
                                    id: "__SSR_STYLE__",
                                    children: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$html$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["html"]`
                  @media (prefers-color-scheme: dark) {
                    html {
                      background-color: #000;
                    }
                  }
                `
                                })
                            ]
                        }),
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsxs$3e$__["jsxs"])("body", {
                            children: [
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("div", {
                                    id: "root"
                                }),
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$jsx$2f$jsx$2d$dev$2d$runtime$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$export__jsxDEV__as__jsx$3e$__["jsx"])("script", {
                                    id: "__FROG_DATA__",
                                    type: "application/json",
                                    // biome-ignore lint/security/noDangerouslySetInnerHtml: <explanation>
                                    dangerouslySetInnerHTML: {
                                        __html: bootstrap
                                    }
                                })
                            ]
                        })
                    ]
                })
            ]
        }));
    }).route('/api', (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$api$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["apiRoutes"])({
        appFid,
        appMnemonic,
        hub,
        routes,
        secret
    }));
    if (serveStatic) app.get('/*', serveStatic({
        manifest: '',
        rewriteRequestPath (path) {
            return path.replace(basePath, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["uiDistDir"]);
        },
        root,
        ...serveStaticOptions
    }));
    return app;
} //# sourceMappingURL=devtools.js.map

})()),
"[project]/node_modules/frog/_lib/dev/utils/env.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "isCloudflareWorkers": ()=>isCloudflareWorkers
});
function isCloudflareWorkers() {
    return(// @ts-ignore
    typeof WebSocketPair !== 'undefined' || typeof navigator !== 'undefined' && navigator.userAgent === 'Cloudflare-Workers' || typeof EdgeRuntime !== 'undefined' && EdgeRuntime === 'vercel');
} //# sourceMappingURL=env.js.map

})()),
"[project]/node_modules/frog/_lib/dev/utils/getUiRoot.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "getUiRoot": ()=>getUiRoot
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$env$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/dev/utils/env.js [app-route] (ecmascript)");
const __TURBOPACK__import$2e$meta__ = {
    get url () {
        return `file://${__turbopack_resolve_absolute_path__("node_modules/frog/_lib/dev/utils/getUiRoot.js")}`;
    }
};
"__TURBOPACK__ecmascript__hoisting__location__";
;
async function getUiRoot() {
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$env$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["isCloudflareWorkers"])()) {
        const { dirname, relative, resolve } = await Promise.resolve().then(()=>__turbopack_external_require__('node:path', true));
        const { fileURLToPath } = await Promise.resolve().then(()=>__turbopack_external_require__('node:url', true));
        return relative('./', resolve(dirname(fileURLToPath(__TURBOPACK__import$2e$meta__.url)), '../../ui'));
    }
    return;
} //# sourceMappingURL=getUiRoot.js.map

})()),
"[project]/node_modules/frog/_lib/dev/index.js [app-route] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, a: __turbopack_async_module__, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_async_module__(async (__turbopack_handle_async_dependencies__, __turbopack_async_result__) => { try {
__turbopack_esm__({
    "devtools": ()=>devtools
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$devtools$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/dev/devtools.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$getUiRoot$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/frog/_lib/dev/utils/getUiRoot.js [app-route] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
;
const root = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$utils$2f$getUiRoot$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getUiRoot"])();
function devtools(frog, options) {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$frog$2f$_lib$2f$dev$2f$devtools$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["devtools"])(frog, {
        ...options,
        root
    });
} //# sourceMappingURL=index.js.map
__turbopack_async_result__();
} catch(e) { __turbopack_async_result__(e); } }, true);
})()),

};

//# sourceMappingURL=node_modules_frog__lib_52fa2a._.js.map